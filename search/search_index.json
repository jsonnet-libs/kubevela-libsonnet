{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kubevela Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>1.4</li> <li>1.5</li> <li>1.6</li> <li>1.7</li> </ul>"},{"location":"1.4/","title":"kubevela","text":"<pre><code>local kubevela = import \"github.com/jsonnet-libs/kubevela-libsonnet/1.4/main.libsonnet\"\n</code></pre> <ul> <li>core</li> <li>standard</li> </ul>"},{"location":"1.4/core/","title":"core","text":"<ul> <li>v1alpha1</li> <li>v1alpha2</li> <li>v1beta1</li> </ul>"},{"location":"1.4/core/v1alpha1/","title":"core.v1alpha1","text":"<ul> <li>envBinding</li> <li>policy</li> <li>workflow</li> </ul>"},{"location":"1.4/core/v1alpha1/envBinding/","title":"core.v1alpha1.envBinding","text":"<p>\"EnvBinding is the Schema for the EnvBinding API\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppTemplate(appTemplate)</code></li> <li><code>fn withAppTemplateMixin(appTemplate)</code></li> <li><code>fn withEngine(engine)</code></li> <li><code>fn withEnvs(envs)</code></li> <li><code>fn withEnvsMixin(envs)</code></li> <li><code>obj spec.envs</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.envs.patch</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.envs.patch.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.envs.patch.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.envs.placement</code><ul> <li><code>obj spec.envs.placement.clusterSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.envs.placement.namespaceSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.envs.selector</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.outputResourcesTo</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha1/envBinding/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha1/envBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvBinding</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-spec","title":"obj spec","text":"<p>\"A EnvBindingSpec defines the desired state of a EnvBinding.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specwithapptemplate","title":"fn spec.withAppTemplate","text":"<pre><code>withAppTemplate(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specwithapptemplatemixin","title":"fn spec.withAppTemplateMixin","text":"<pre><code>withAppTemplateMixin(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specwithengine","title":"fn spec.withEngine","text":"<pre><code>withEngine(engine)\n</code></pre> <p>\"ClusterManagementEngine represents a multi-cluster management solution\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specwithenvs","title":"fn spec.withEnvs","text":"<pre><code>withEnvs(envs)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specwithenvsmixin","title":"fn spec.withEnvsMixin","text":"<pre><code>withEnvsMixin(envs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvs","title":"obj spec.envs","text":""},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvswithname","title":"fn spec.envs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvspatch","title":"obj spec.envs.patch","text":"<p>\"EnvPatch specify the parameter configuration for different environments\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponents","title":"fn spec.envs.patch.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponentsmixin","title":"fn spec.envs.patch.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvspatchcomponents","title":"obj spec.envs.patch.components","text":""},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependson","title":"fn spec.envs.patch.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependsonmixin","title":"fn spec.envs.patch.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithexternalrevision","title":"fn spec.envs.patch.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputs","title":"fn spec.envs.patch.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputsmixin","title":"fn spec.envs.patch.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithname","title":"fn spec.envs.patch.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputs","title":"fn spec.envs.patch.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputsmixin","title":"fn spec.envs.patch.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithproperties","title":"fn spec.envs.patch.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithpropertiesmixin","title":"fn spec.envs.patch.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopes","title":"fn spec.envs.patch.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopesmixin","title":"fn spec.envs.patch.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraits","title":"fn spec.envs.patch.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraitsmixin","title":"fn spec.envs.patch.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtype","title":"fn spec.envs.patch.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsinputs","title":"obj spec.envs.patch.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithfrom","title":"fn spec.envs.patch.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithparameterkey","title":"fn spec.envs.patch.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsoutputs","title":"obj spec.envs.patch.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithname","title":"fn spec.envs.patch.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithvaluefrom","title":"fn spec.envs.patch.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvspatchcomponentstraits","title":"obj spec.envs.patch.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithproperties","title":"fn spec.envs.patch.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithpropertiesmixin","title":"fn spec.envs.patch.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithtype","title":"fn spec.envs.patch.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvsplacement","title":"obj spec.envs.placement","text":"<p>\"EnvPlacement defines the placement rules for an app.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvsplacementclusterselector","title":"obj spec.envs.placement.clusterSelector","text":"<p>\"ClusterSelector defines the rules to select a Cluster resource. Either name or labels is needed.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabels","title":"fn spec.envs.placement.clusterSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabelsmixin","title":"fn spec.envs.placement.clusterSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithname","title":"fn spec.envs.placement.clusterSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the cluster.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvsplacementnamespaceselector","title":"obj spec.envs.placement.namespaceSelector","text":"<p>\"NamespaceSelector defines the rules to select a Namespace resource. Either name or labels is needed.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabels","title":"fn spec.envs.placement.namespaceSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabelsmixin","title":"fn spec.envs.placement.namespaceSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithname","title":"fn spec.envs.placement.namespaceSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the namespace.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specenvsselector","title":"obj spec.envs.selector","text":"<p>\"EnvSelector defines which components should this env contains\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponents","title":"fn spec.envs.selector.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponentsmixin","title":"fn spec.envs.selector.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/envBinding/#obj-specoutputresourcesto","title":"obj spec.outputResourcesTo","text":"<p>\"OutputResourcesTo specifies the namespace and name of a ConfigMap which store the resources rendered after differentiated configuration\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specoutputresourcestowithname","title":"fn spec.outputResourcesTo.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1alpha1/envBinding/#fn-specoutputresourcestowithnamespace","title":"fn spec.outputResourcesTo.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1alpha1/policy/","title":"core.v1alpha1.policy","text":"<p>\"Policy is the Schema for the policy API\"</p>"},{"location":"1.4/core/v1alpha1/policy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha1/policy/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha1/policy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Policy</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-withproperties","title":"fn withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha1/policy/#fn-withpropertiesmixin","title":"fn withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-withtype","title":"fn withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha1/policy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha1/policy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha1/workflow/","title":"core.v1alpha1.workflow","text":"<p>\"Workflow is the Schema for the policy API\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha1/workflow/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1alpha2/","title":"core.v1alpha2","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>healthScope</li> <li>manualScalerTrait</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.4/core/v1alpha2/application/","title":"core.v1alpha2.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.4/core/v1alpha2/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/application/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.4/core/v1alpha2/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithsettings","title":"fn spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithsettingsmixin","title":"fn spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentstraitswithname","title":"fn spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha2/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/application/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/","title":"core.v1alpha2.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationConfiguration(applicationConfiguration)</code></li> <li><code>fn withApplicationConfigurationMixin(applicationConfiguration)</code></li> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.components</code><ul> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfiguration","title":"fn spec.withApplicationConfiguration","text":"<pre><code>withApplicationConfiguration(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfigurationmixin","title":"fn spec.withApplicationConfigurationMixin","text":"<pre><code>withApplicationConfigurationMixin(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettings","title":"fn spec.application.spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettingsmixin","title":"fn spec.application.spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithname","title":"fn spec.application.spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplan","title":"obj spec.application.spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithbatchpartition","title":"fn spec.application.spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetric","title":"fn spec.application.spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithnumbatches","title":"fn spec.application.spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithpaused","title":"fn spec.application.spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatches","title":"fn spec.application.spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatchesmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutstrategy","title":"fn spec.application.spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithtargetsize","title":"fn spec.application.spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetric","title":"obj spec.application.spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatches","title":"obj spec.application.spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlist","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithreplicas","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetric","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.4/core/v1alpha2/applicationRevision/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-speccomponentswithraw","title":"fn spec.components.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.4/core/v1alpha2/applicationRevision/#fn-speccomponentswithrawmixin","title":"fn spec.components.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/","title":"core.v1alpha2.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.4/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.4/core/v1alpha2/healthScope/","title":"core.v1alpha2.healthScope","text":"<p>\"A HealthScope determines an aggregate health status based of the health of components.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppReferences(appReferences)</code></li> <li><code>fn withAppReferencesMixin(appReferences)</code></li> <li><code>fn withProbe-Interval(probe_interval)</code></li> <li><code>fn withProbe-Timeout(probe_timeout)</code></li> <li><code>fn withWorkloadRefs(workloadRefs)</code></li> <li><code>fn withWorkloadRefsMixin(workloadRefs)</code></li> <li><code>obj spec.appReferences</code><ul> <li><code>fn withAppName(appName)</code></li> <li><code>fn withCompReferences(compReferences)</code></li> <li><code>fn withCompReferencesMixin(compReferences)</code></li> <li><code>obj spec.appReferences.compReferences</code><ul> <li><code>fn withCompName(compName)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>obj spec.appReferences.compReferences.traits</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.appReferences.compReferences.workload</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workloadRefs</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/healthScope/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/healthScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HealthScope</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-spec","title":"obj spec","text":"<p>\"A HealthScopeSpec defines the desired state of a HealthScope.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithappreferences","title":"fn spec.withAppReferences","text":"<pre><code>withAppReferences(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithappreferencesmixin","title":"fn spec.withAppReferencesMixin","text":"<pre><code>withAppReferencesMixin(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithprobe-interval","title":"fn spec.withProbe-Interval","text":"<pre><code>withProbe-Interval(probe_interval)\n</code></pre> <p>\"ProbeInterval is the amount of time in seconds between probing tries.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithprobe-timeout","title":"fn spec.withProbe-Timeout","text":"<pre><code>withProbe-Timeout(probe_timeout)\n</code></pre> <p>\"ProbeTimeout is the amount of time in seconds to wait when receiving a response before marked failure.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithworkloadrefs","title":"fn spec.withWorkloadRefs","text":"<pre><code>withWorkloadRefs(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specwithworkloadrefsmixin","title":"fn spec.withWorkloadRefsMixin","text":"<pre><code>withWorkloadRefsMixin(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-specappreferences","title":"obj spec.appReferences","text":"<p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferenceswithappname","title":"fn spec.appReferences.withAppName","text":"<pre><code>withAppName(appName)\n</code></pre>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferences","title":"fn spec.appReferences.withCompReferences","text":"<pre><code>withCompReferences(compReferences)\n</code></pre>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferencesmixin","title":"fn spec.appReferences.withCompReferencesMixin","text":"<pre><code>withCompReferencesMixin(compReferences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-specappreferencescompreferences","title":"obj spec.appReferences.compReferences","text":""},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithcompname","title":"fn spec.appReferences.compReferences.withCompName","text":"<pre><code>withCompName(compName)\n</code></pre>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraits","title":"fn spec.appReferences.compReferences.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraitsmixin","title":"fn spec.appReferences.compReferences.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-specappreferencescompreferencestraits","title":"obj spec.appReferences.compReferences.traits","text":""},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithapiversion","title":"fn spec.appReferences.compReferences.traits.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithfieldpath","title":"fn spec.appReferences.compReferences.traits.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithkind","title":"fn spec.appReferences.compReferences.traits.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithname","title":"fn spec.appReferences.compReferences.traits.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithnamespace","title":"fn spec.appReferences.compReferences.traits.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithresourceversion","title":"fn spec.appReferences.compReferences.traits.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithuid","title":"fn spec.appReferences.compReferences.traits.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-specappreferencescompreferencesworkload","title":"obj spec.appReferences.compReferences.workload","text":"<p>\"ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.  1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.  2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular     restrictions like, \\\"must refer only to types A and B\\\" or \\\"UID not honored\\\" or \\\"name must be restricted\\\".     Those cannot be well described when embedded.  3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.  4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity     during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple     and the version of the actual struct is irrelevant.  5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type     will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithapiversion","title":"fn spec.appReferences.compReferences.workload.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithfieldpath","title":"fn spec.appReferences.compReferences.workload.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithkind","title":"fn spec.appReferences.compReferences.workload.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithname","title":"fn spec.appReferences.compReferences.workload.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithnamespace","title":"fn spec.appReferences.compReferences.workload.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithresourceversion","title":"fn spec.appReferences.compReferences.workload.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithuid","title":"fn spec.appReferences.compReferences.workload.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#obj-specworkloadrefs","title":"obj spec.workloadRefs","text":"<p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithapiversion","title":"fn spec.workloadRefs.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithfieldpath","title":"fn spec.workloadRefs.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithkind","title":"fn spec.workloadRefs.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithname","title":"fn spec.workloadRefs.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithnamespace","title":"fn spec.workloadRefs.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithresourceversion","title":"fn spec.workloadRefs.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/healthScope/#fn-specworkloadrefswithuid","title":"fn spec.workloadRefs.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/","title":"core.v1alpha2.manualScalerTrait","text":"<p>\"A ManualScalerTrait determines how many replicas a workload should have.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReplicaCount(replicaCount)</code></li> <li><code>obj spec.workloadRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ManualScalerTrait</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#obj-spec","title":"obj spec","text":"<p>\"A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specwithreplicacount","title":"fn spec.withReplicaCount","text":"<pre><code>withReplicaCount(replicaCount)\n</code></pre> <p>\"ReplicaCount of the workload this trait applies to.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#obj-specworkloadref","title":"obj spec.workloadRef","text":"<p>\"WorkloadReference to the workload this trait applies to.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithapiversion","title":"fn spec.workloadRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithfieldpath","title":"fn spec.workloadRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithkind","title":"fn spec.workloadRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithname","title":"fn spec.workloadRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithnamespace","title":"fn spec.workloadRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithresourceversion","title":"fn spec.workloadRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithuid","title":"fn spec.workloadRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/","title":"core.v1alpha2.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/","title":"core.v1alpha2.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/","title":"core.v1alpha2.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/","title":"core.v1beta1","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>definitionRevision</li> <li>policyDefinition</li> <li>resourceTracker</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workflow</li> <li>workflowStepDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.4/core/v1beta1/application/","title":"core.v1beta1.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.4/core/v1beta1/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/application/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.4/core/v1beta1/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithdependson","title":"fn spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithdependsonmixin","title":"fn spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithexternalrevision","title":"fn spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithinputs","title":"fn spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithinputsmixin","title":"fn spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithoutputs","title":"fn spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithoutputsmixin","title":"fn spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithproperties","title":"fn spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithpropertiesmixin","title":"fn spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-speccomponentsinputs","title":"obj spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentsinputswithfrom","title":"fn spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentsinputswithparameterkey","title":"fn spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-speccomponentsoutputs","title":"obj spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentsoutputswithname","title":"fn spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentsoutputswithvaluefrom","title":"fn spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-speccomponentstraitswithtype","title":"fn spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specpolicies","title":"obj spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specpolicieswithname","title":"fn spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specpolicieswithproperties","title":"fn spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specpolicieswithpropertiesmixin","title":"fn spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specpolicieswithtype","title":"fn spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowwithref","title":"fn spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/","title":"core.v1beta1.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>fn withPolicyDefinitions(policyDefinitions)</code></li> <li><code>fn withPolicyDefinitionsMixin(policyDefinitions)</code></li> <li><code>fn withReferredObjects(referredObjects)</code></li> <li><code>fn withReferredObjectsMixin(referredObjects)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withScopeGVK(scopeGVK)</code></li> <li><code>fn withScopeGVKMixin(scopeGVK)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitions(workflowStepDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitionsMixin(workflowStepDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.application.spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies records the external policies\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies records the external policies\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitions","title":"fn spec.withPolicyDefinitions","text":"<pre><code>withPolicyDefinitions(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitionsmixin","title":"fn spec.withPolicyDefinitionsMixin","text":"<pre><code>withPolicyDefinitionsMixin(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithreferredobjects","title":"fn spec.withReferredObjects","text":"<pre><code>withReferredObjects(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithreferredobjectsmixin","title":"fn spec.withReferredObjectsMixin","text":"<pre><code>withReferredObjectsMixin(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithscopegvk","title":"fn spec.withScopeGVK","text":"<pre><code>withScopeGVK(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithscopegvkmixin","title":"fn spec.withScopeGVKMixin","text":"<pre><code>withScopeGVKMixin(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitions","title":"fn spec.withWorkflowStepDefinitions","text":"<pre><code>withWorkflowStepDefinitions(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitionsmixin","title":"fn spec.withWorkflowStepDefinitionsMixin","text":"<pre><code>withWorkflowStepDefinitionsMixin(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpolicies","title":"fn spec.application.spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpoliciesmixin","title":"fn spec.application.spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependson","title":"fn spec.application.spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependsonmixin","title":"fn spec.application.spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithexternalrevision","title":"fn spec.application.spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputs","title":"fn spec.application.spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputsmixin","title":"fn spec.application.spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputs","title":"fn spec.application.spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputsmixin","title":"fn spec.application.spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithproperties","title":"fn spec.application.spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithpropertiesmixin","title":"fn spec.application.spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsinputs","title":"obj spec.application.spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithfrom","title":"fn spec.application.spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithparameterkey","title":"fn spec.application.spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsoutputs","title":"obj spec.application.spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithname","title":"fn spec.application.spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithvaluefrom","title":"fn spec.application.spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithtype","title":"fn spec.application.spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecpolicies","title":"obj spec.application.spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithname","title":"fn spec.application.spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithproperties","title":"fn spec.application.spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithpropertiesmixin","title":"fn spec.application.spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithtype","title":"fn spec.application.spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflow","title":"obj spec.application.spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithref","title":"fn spec.application.spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithsteps","title":"fn spec.application.spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithstepsmixin","title":"fn spec.application.spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowsteps","title":"obj spec.application.spec.workflow.steps","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependson","title":"fn spec.application.spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithif","title":"fn spec.application.spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputs","title":"fn spec.application.spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithname","title":"fn spec.application.spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputs","title":"fn spec.application.spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithproperties","title":"fn spec.application.spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubsteps","title":"fn spec.application.spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubstepsmixin","title":"fn spec.application.spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtype","title":"fn spec.application.spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsinputs","title":"obj spec.application.spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsoutputs","title":"obj spec.application.spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubsteps","title":"obj spec.application.spec.workflow.steps.subSteps","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependson","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithif","title":"fn spec.application.spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputs","title":"fn spec.application.spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithname","title":"fn spec.application.spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputs","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithproperties","title":"fn spec.application.spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtype","title":"fn spec.application.spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsinputs","title":"obj spec.application.spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsoutputs","title":"obj spec.application.spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow records the external workflow\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowwithapiversion","title":"fn spec.workflow.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowwithkind","title":"fn spec.workflow.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowmetadata","title":"obj spec.workflow.metadata","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotations","title":"fn spec.workflow.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotationsmixin","title":"fn spec.workflow.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizers","title":"fn spec.workflow.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizersmixin","title":"fn spec.workflow.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabels","title":"fn spec.workflow.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabelsmixin","title":"fn spec.workflow.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithname","title":"fn spec.workflow.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithnamespace","title":"fn spec.workflow.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/componentDefinition/","title":"core.v1beta1.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.4/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/","title":"core.v1beta1.definitionRevision","text":"<p>\"DefinitionRevision is the Schema for the DefinitionRevision API\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDefinitionType(definitionType)</code></li> <li><code>fn withRevision(revision)</code></li> <li><code>fn withRevisionHash(revisionHash)</code></li> <li><code>obj spec.componentDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.componentDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.componentDefinition.spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic</code><ul> <li><code>obj spec.componentDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.policyDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.policyDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic</code><ul> <li><code>obj spec.policyDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.traitDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withSkipRevisionAffect(skipRevisionAffect)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.traitDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic</code><ul> <li><code>obj spec.traitDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.workflowStepDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec</code><ul> <li><code>obj spec.workflowStepDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic</code><ul> <li><code>obj spec.workflowStepDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/definitionRevision/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/definitionRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DefinitionRevision</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spec","title":"obj spec","text":"<p>\"DefinitionRevisionSpec is the spec of DefinitionRevision\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specwithdefinitiontype","title":"fn spec.withDefinitionType","text":"<pre><code>withDefinitionType(definitionType)\n</code></pre> <p>\"DefinitionType\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specwithrevision","title":"fn spec.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre> <p>\"Revision record revision number of DefinitionRevision\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specwithrevisionhash","title":"fn spec.withRevisionHash","text":"<pre><code>withRevisionHash(revisionHash)\n</code></pre> <p>\"RevisionHash record the hash value of the spec of DefinitionRevision object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinition","title":"obj spec.componentDefinition","text":"<p>\"ComponentDefinition records the snapshot of the created/modified ComponentDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithapiversion","title":"fn spec.componentDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithkind","title":"fn spec.componentDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionmetadata","title":"obj spec.componentDefinition.metadata","text":""},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotations","title":"fn spec.componentDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotationsmixin","title":"fn spec.componentDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizers","title":"fn spec.componentDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizersmixin","title":"fn spec.componentDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabels","title":"fn spec.componentDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabelsmixin","title":"fn spec.componentDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithname","title":"fn spec.componentDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithnamespace","title":"fn spec.componentDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspec","title":"obj spec.componentDefinition.spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekinds","title":"fn spec.componentDefinition.spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekindsmixin","title":"fn spec.componentDefinition.spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextension","title":"fn spec.componentDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextensionmixin","title":"fn spec.componentDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithpodspecpath","title":"fn spec.componentDefinition.spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithrevisionlabel","title":"fn spec.componentDefinition.spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecchildresourcekinds","title":"obj spec.componentDefinition.spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithapiversion","title":"fn spec.componentDefinition.spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithkind","title":"fn spec.componentDefinition.spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselector","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselectormixin","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematic","title":"obj spec.componentDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematiccue","title":"obj spec.componentDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematiccuewithtemplate","title":"fn spec.componentDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematichelm","title":"obj spec.componentDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrelease","title":"fn spec.componentDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithreleasemixin","title":"fn spec.componentDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepository","title":"fn spec.componentDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.componentDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickube","title":"obj spec.componentDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparameters","title":"fn spec.componentDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparametersmixin","title":"fn spec.componentDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplate","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplatemixin","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickubeparameters","title":"obj spec.componentDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithdescription","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithname","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithrequired","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithtype","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraform","title":"obj spec.componentDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithconfiguration","title":"fn spec.componentDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithcustomregion","title":"fn spec.componentDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.componentDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithpath","title":"fn spec.componentDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithtype","title":"fn spec.componentDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformproviderref","title":"obj spec.componentDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkload","title":"obj spec.componentDefinition.spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloadwithtype","title":"fn spec.componentDefinition.spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkloaddefinition","title":"obj spec.componentDefinition.spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithapiversion","title":"fn spec.componentDefinition.spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithkind","title":"fn spec.componentDefinition.spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinition","title":"obj spec.policyDefinition","text":"<p>\"PolicyDefinition records the snapshot of the created/modified PolicyDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithapiversion","title":"fn spec.policyDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithkind","title":"fn spec.policyDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionmetadata","title":"obj spec.policyDefinition.metadata","text":""},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotations","title":"fn spec.policyDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotationsmixin","title":"fn spec.policyDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizers","title":"fn spec.policyDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizersmixin","title":"fn spec.policyDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabels","title":"fn spec.policyDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabelsmixin","title":"fn spec.policyDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithname","title":"fn spec.policyDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithnamespace","title":"fn spec.policyDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspec","title":"obj spec.policyDefinition.spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecwithmanagehealthcheck","title":"fn spec.policyDefinition.spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecdefinitionref","title":"obj spec.policyDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithname","title":"fn spec.policyDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithversion","title":"fn spec.policyDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematic","title":"obj spec.policyDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematiccue","title":"obj spec.policyDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematiccuewithtemplate","title":"fn spec.policyDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematichelm","title":"obj spec.policyDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrelease","title":"fn spec.policyDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithreleasemixin","title":"fn spec.policyDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepository","title":"fn spec.policyDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepositorymixin","title":"fn spec.policyDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickube","title":"obj spec.policyDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparameters","title":"fn spec.policyDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparametersmixin","title":"fn spec.policyDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplate","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplatemixin","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickubeparameters","title":"obj spec.policyDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithdescription","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithname","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithrequired","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithtype","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraform","title":"obj spec.policyDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithconfiguration","title":"fn spec.policyDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithcustomregion","title":"fn spec.policyDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithdeleteresource","title":"fn spec.policyDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithpath","title":"fn spec.policyDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithtype","title":"fn spec.policyDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformproviderref","title":"obj spec.policyDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinition","title":"obj spec.traitDefinition","text":"<p>\"TraitDefinition records the snapshot of the created/modified TraitDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithapiversion","title":"fn spec.traitDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithkind","title":"fn spec.traitDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionmetadata","title":"obj spec.traitDefinition.metadata","text":""},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotations","title":"fn spec.traitDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotationsmixin","title":"fn spec.traitDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizers","title":"fn spec.traitDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizersmixin","title":"fn spec.traitDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabels","title":"fn spec.traitDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabelsmixin","title":"fn spec.traitDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithname","title":"fn spec.traitDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithnamespace","title":"fn spec.traitDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspec","title":"obj spec.traitDefinition.spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloads","title":"fn spec.traitDefinition.spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloadsmixin","title":"fn spec.traitDefinition.spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswith","title":"fn spec.traitDefinition.spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswithmixin","title":"fn spec.traitDefinition.spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithcontrolplaneonly","title":"fn spec.traitDefinition.spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextension","title":"fn spec.traitDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextensionmixin","title":"fn spec.traitDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithmanageworkload","title":"fn spec.traitDefinition.spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithpoddisruptive","title":"fn spec.traitDefinition.spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithrevisionenabled","title":"fn spec.traitDefinition.spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithskiprevisionaffect","title":"fn spec.traitDefinition.spec.withSkipRevisionAffect","text":"<pre><code>withSkipRevisionAffect(skipRevisionAffect)\n</code></pre> <p>\"SkipRevisionAffect defines the update this trait will not generate a new application Revision\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithworkloadrefpath","title":"fn spec.traitDefinition.spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecdefinitionref","title":"obj spec.traitDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithname","title":"fn spec.traitDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithversion","title":"fn spec.traitDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematic","title":"obj spec.traitDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematiccue","title":"obj spec.traitDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematiccuewithtemplate","title":"fn spec.traitDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematichelm","title":"obj spec.traitDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrelease","title":"fn spec.traitDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithreleasemixin","title":"fn spec.traitDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepository","title":"fn spec.traitDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.traitDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickube","title":"obj spec.traitDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparameters","title":"fn spec.traitDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparametersmixin","title":"fn spec.traitDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplate","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplatemixin","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickubeparameters","title":"obj spec.traitDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithdescription","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithname","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithrequired","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithtype","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraform","title":"obj spec.traitDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithconfiguration","title":"fn spec.traitDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithcustomregion","title":"fn spec.traitDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.traitDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithpath","title":"fn spec.traitDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithtype","title":"fn spec.traitDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformproviderref","title":"obj spec.traitDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinition","title":"obj spec.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition records the snapshot of the created/modified WorkflowStepDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithapiversion","title":"fn spec.workflowStepDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithkind","title":"fn spec.workflowStepDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionmetadata","title":"obj spec.workflowStepDefinition.metadata","text":""},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotations","title":"fn spec.workflowStepDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotationsmixin","title":"fn spec.workflowStepDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizers","title":"fn spec.workflowStepDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizersmixin","title":"fn spec.workflowStepDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabels","title":"fn spec.workflowStepDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabelsmixin","title":"fn spec.workflowStepDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithname","title":"fn spec.workflowStepDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithnamespace","title":"fn spec.workflowStepDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspec","title":"obj spec.workflowStepDefinition.spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecdefinitionref","title":"obj spec.workflowStepDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithname","title":"fn spec.workflowStepDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithversion","title":"fn spec.workflowStepDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematic","title":"obj spec.workflowStepDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematiccue","title":"obj spec.workflowStepDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematiccuewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematichelm","title":"obj spec.workflowStepDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrelease","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithreleasemixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepository","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickube","title":"obj spec.workflowStepDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparameters","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparametersmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplatemixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickubeparameters","title":"obj spec.workflowStepDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithdescription","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithname","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithrequired","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithtype","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraform","title":"obj spec.workflowStepDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithconfiguration","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithcustomregion","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithpath","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithtype","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformproviderref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/","title":"core.v1beta1.policyDefinition","text":"<p>\"PolicyDefinition is the Schema for the policydefinitions API\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/policyDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/policyDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PolicyDefinition</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-spec","title":"obj spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specwithmanagehealthcheck","title":"fn spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/","title":"core.v1beta1.resourceTracker","text":"<p>\"An ResourceTracker represents a tracker for track cross namespace resources\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationGeneration(applicationGeneration)</code></li> <li><code>fn withManagedResources(managedResources)</code></li> <li><code>fn withManagedResourcesMixin(managedResources)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.managedResources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withCluster(cluster)</code></li> <li><code>fn withComponent(component)</code></li> <li><code>fn withCreator(creator)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withTrait(trait)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/resourceTracker/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/resourceTracker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ResourceTracker</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#obj-spec","title":"obj spec","text":"<p>\"ResourceTrackerSpec define the spec of resourceTracker\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specwithapplicationgeneration","title":"fn spec.withApplicationGeneration","text":"<pre><code>withApplicationGeneration(applicationGeneration)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specwithmanagedresources","title":"fn spec.withManagedResources","text":"<pre><code>withManagedResources(managedResources)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specwithmanagedresourcesmixin","title":"fn spec.withManagedResourcesMixin","text":"<pre><code>withManagedResourcesMixin(managedResources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ResourceTrackerType defines the type of resourceTracker\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#obj-specmanagedresources","title":"obj spec.managedResources","text":""},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithapiversion","title":"fn spec.managedResources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcluster","title":"fn spec.managedResources.withCluster","text":"<pre><code>withCluster(cluster)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcomponent","title":"fn spec.managedResources.withComponent","text":"<pre><code>withComponent(component)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcreator","title":"fn spec.managedResources.withCreator","text":"<pre><code>withCreator(creator)\n</code></pre> <p>\"ResourceCreatorRole defines the resource creator.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithdeleted","title":"fn spec.managedResources.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted marks the resource to be deleted\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithenv","title":"fn spec.managedResources.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithfieldpath","title":"fn spec.managedResources.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithkind","title":"fn spec.managedResources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithname","title":"fn spec.managedResources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithnamespace","title":"fn spec.managedResources.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithraw","title":"fn spec.managedResources.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithrawmixin","title":"fn spec.managedResources.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithresourceversion","title":"fn spec.managedResources.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithtrait","title":"fn spec.managedResources.withTrait","text":"<pre><code>withTrait(trait)\n</code></pre>"},{"location":"1.4/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithuid","title":"fn spec.managedResources.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/","title":"core.v1beta1.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/","title":"core.v1beta1.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withSkipRevisionAffect(skipRevisionAffect)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithcontrolplaneonly","title":"fn spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithmanageworkload","title":"fn spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithskiprevisionaffect","title":"fn spec.withSkipRevisionAffect","text":"<pre><code>withSkipRevisionAffect(skipRevisionAffect)\n</code></pre> <p>\"SkipRevisionAffect defines the update this trait will not generate a new application Revision\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/workflow/","title":"core.v1beta1.workflow","text":"<p>\"Workflow defines workflow steps and other attributes\"</p>"},{"location":"1.4/core/v1beta1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/workflow/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-withref","title":"fn withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/","title":"core.v1beta1.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition is the Schema for the workflowstepdefinitions API\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkflowStepDefinition</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-spec","title":"obj spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/","title":"core.v1beta1.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.4/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.4/standard/","title":"standard","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.4/standard/v1alpha1/","title":"standard.v1alpha1","text":"<ul> <li>rollout</li> </ul>"},{"location":"1.4/standard/v1alpha1/rollout/","title":"standard.v1alpha1.rollout","text":"<p>\"Rollout is the Schema for the Rollout API\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentName(componentName)</code></li> <li><code>fn withSourceRevisionName(sourceRevisionName)</code></li> <li><code>fn withTargetRevisionName(targetRevisionName)</code></li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.4/standard/v1alpha1/rollout/#fields","title":"Fields","text":""},{"location":"1.4/standard/v1alpha1/rollout/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Rollout</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-spec","title":"obj spec","text":"<p>\"RolloutSpec defines how to describe an update between different compRevision\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specwithcomponentname","title":"fn spec.withComponentName","text":"<pre><code>withComponentName(componentName)\n</code></pre> <p>\"ComponentName specify the component name\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specwithsourcerevisionname","title":"fn spec.withSourceRevisionName","text":"<pre><code>withSourceRevisionName(sourceRevisionName)\n</code></pre> <p>\"SourceRevisionName contains the name of the componentRevisionName  that we need to upgrade from. it can be empty only when it's the first time to deploy the application\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specwithtargetrevisionname","title":"fn spec.withTargetRevisionName","text":"<pre><code>withTargetRevisionName(targetRevisionName)\n</code></pre> <p>\"TargetRevisionName contains the name of the componentRevisionName that we need to upgrade to.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.4/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/","title":"kubevela","text":"<pre><code>local kubevela = import \"github.com/jsonnet-libs/kubevela-libsonnet/1.5/main.libsonnet\"\n</code></pre> <ul> <li>core</li> <li>standard</li> </ul>"},{"location":"1.5/core/","title":"core","text":"<ul> <li>v1alpha1</li> <li>v1alpha2</li> <li>v1beta1</li> </ul>"},{"location":"1.5/core/v1alpha1/","title":"core.v1alpha1","text":"<ul> <li>envBinding</li> <li>policy</li> <li>workflow</li> </ul>"},{"location":"1.5/core/v1alpha1/envBinding/","title":"core.v1alpha1.envBinding","text":"<p>\"EnvBinding is the Schema for the EnvBinding API\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppTemplate(appTemplate)</code></li> <li><code>fn withAppTemplateMixin(appTemplate)</code></li> <li><code>fn withEngine(engine)</code></li> <li><code>fn withEnvs(envs)</code></li> <li><code>fn withEnvsMixin(envs)</code></li> <li><code>obj spec.envs</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.envs.patch</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.envs.patch.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.envs.patch.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.envs.placement</code><ul> <li><code>obj spec.envs.placement.clusterSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.envs.placement.namespaceSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.envs.selector</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.outputResourcesTo</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha1/envBinding/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha1/envBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvBinding</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-spec","title":"obj spec","text":"<p>\"A EnvBindingSpec defines the desired state of a EnvBinding.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specwithapptemplate","title":"fn spec.withAppTemplate","text":"<pre><code>withAppTemplate(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specwithapptemplatemixin","title":"fn spec.withAppTemplateMixin","text":"<pre><code>withAppTemplateMixin(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specwithengine","title":"fn spec.withEngine","text":"<pre><code>withEngine(engine)\n</code></pre> <p>\"ClusterManagementEngine represents a multi-cluster management solution\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specwithenvs","title":"fn spec.withEnvs","text":"<pre><code>withEnvs(envs)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specwithenvsmixin","title":"fn spec.withEnvsMixin","text":"<pre><code>withEnvsMixin(envs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvs","title":"obj spec.envs","text":""},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvswithname","title":"fn spec.envs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvspatch","title":"obj spec.envs.patch","text":"<p>\"EnvPatch specify the parameter configuration for different environments\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponents","title":"fn spec.envs.patch.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponentsmixin","title":"fn spec.envs.patch.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvspatchcomponents","title":"obj spec.envs.patch.components","text":""},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependson","title":"fn spec.envs.patch.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependsonmixin","title":"fn spec.envs.patch.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithexternalrevision","title":"fn spec.envs.patch.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputs","title":"fn spec.envs.patch.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputsmixin","title":"fn spec.envs.patch.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithname","title":"fn spec.envs.patch.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputs","title":"fn spec.envs.patch.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputsmixin","title":"fn spec.envs.patch.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithproperties","title":"fn spec.envs.patch.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithpropertiesmixin","title":"fn spec.envs.patch.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopes","title":"fn spec.envs.patch.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopesmixin","title":"fn spec.envs.patch.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraits","title":"fn spec.envs.patch.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraitsmixin","title":"fn spec.envs.patch.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtype","title":"fn spec.envs.patch.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsinputs","title":"obj spec.envs.patch.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithfrom","title":"fn spec.envs.patch.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithparameterkey","title":"fn spec.envs.patch.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsoutputs","title":"obj spec.envs.patch.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithname","title":"fn spec.envs.patch.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithvaluefrom","title":"fn spec.envs.patch.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvspatchcomponentstraits","title":"obj spec.envs.patch.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithproperties","title":"fn spec.envs.patch.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithpropertiesmixin","title":"fn spec.envs.patch.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithtype","title":"fn spec.envs.patch.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvsplacement","title":"obj spec.envs.placement","text":"<p>\"EnvPlacement defines the placement rules for an app.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvsplacementclusterselector","title":"obj spec.envs.placement.clusterSelector","text":"<p>\"ClusterSelector defines the rules to select a Cluster resource. Either name or labels is needed.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabels","title":"fn spec.envs.placement.clusterSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabelsmixin","title":"fn spec.envs.placement.clusterSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithname","title":"fn spec.envs.placement.clusterSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the cluster.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvsplacementnamespaceselector","title":"obj spec.envs.placement.namespaceSelector","text":"<p>\"NamespaceSelector defines the rules to select a Namespace resource. Either name or labels is needed.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabels","title":"fn spec.envs.placement.namespaceSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabelsmixin","title":"fn spec.envs.placement.namespaceSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithname","title":"fn spec.envs.placement.namespaceSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the namespace.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specenvsselector","title":"obj spec.envs.selector","text":"<p>\"EnvSelector defines which components should this env contains\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponents","title":"fn spec.envs.selector.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponentsmixin","title":"fn spec.envs.selector.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/envBinding/#obj-specoutputresourcesto","title":"obj spec.outputResourcesTo","text":"<p>\"OutputResourcesTo specifies the namespace and name of a ConfigMap which store the resources rendered after differentiated configuration\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specoutputresourcestowithname","title":"fn spec.outputResourcesTo.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1alpha1/envBinding/#fn-specoutputresourcestowithnamespace","title":"fn spec.outputResourcesTo.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1alpha1/policy/","title":"core.v1alpha1.policy","text":"<p>\"Policy is the Schema for the policy API\"</p>"},{"location":"1.5/core/v1alpha1/policy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha1/policy/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha1/policy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Policy</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-withproperties","title":"fn withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha1/policy/#fn-withpropertiesmixin","title":"fn withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-withtype","title":"fn withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha1/policy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha1/policy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha1/workflow/","title":"core.v1alpha1.workflow","text":"<p>\"Workflow is the Schema for the policy API\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha1/workflow/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithtimeout","title":"fn steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepsmeta","title":"obj steps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepsmetawithalias","title":"fn steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithtimeout","title":"fn steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepssubstepsmeta","title":"obj steps.subSteps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepsmetawithalias","title":"fn steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1alpha2/","title":"core.v1alpha2","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>healthScope</li> <li>manualScalerTrait</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.5/core/v1alpha2/application/","title":"core.v1alpha2.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.5/core/v1alpha2/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/application/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.5/core/v1alpha2/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithsettings","title":"fn spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithsettingsmixin","title":"fn spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentstraitswithname","title":"fn spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha2/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/application/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/","title":"core.v1alpha2.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationConfiguration(applicationConfiguration)</code></li> <li><code>fn withApplicationConfigurationMixin(applicationConfiguration)</code></li> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.components</code><ul> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfiguration","title":"fn spec.withApplicationConfiguration","text":"<pre><code>withApplicationConfiguration(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfigurationmixin","title":"fn spec.withApplicationConfigurationMixin","text":"<pre><code>withApplicationConfigurationMixin(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettings","title":"fn spec.application.spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettingsmixin","title":"fn spec.application.spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithname","title":"fn spec.application.spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplan","title":"obj spec.application.spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithbatchpartition","title":"fn spec.application.spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetric","title":"fn spec.application.spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithnumbatches","title":"fn spec.application.spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithpaused","title":"fn spec.application.spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatches","title":"fn spec.application.spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatchesmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutstrategy","title":"fn spec.application.spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithtargetsize","title":"fn spec.application.spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetric","title":"obj spec.application.spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatches","title":"obj spec.application.spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlist","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithreplicas","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetric","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/core/v1alpha2/applicationRevision/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-speccomponentswithraw","title":"fn spec.components.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.5/core/v1alpha2/applicationRevision/#fn-speccomponentswithrawmixin","title":"fn spec.components.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/","title":"core.v1alpha2.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.5/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.5/core/v1alpha2/healthScope/","title":"core.v1alpha2.healthScope","text":"<p>\"A HealthScope determines an aggregate health status based of the health of components.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppReferences(appReferences)</code></li> <li><code>fn withAppReferencesMixin(appReferences)</code></li> <li><code>fn withProbe-Interval(probe_interval)</code></li> <li><code>fn withProbe-Timeout(probe_timeout)</code></li> <li><code>fn withWorkloadRefs(workloadRefs)</code></li> <li><code>fn withWorkloadRefsMixin(workloadRefs)</code></li> <li><code>obj spec.appReferences</code><ul> <li><code>fn withAppName(appName)</code></li> <li><code>fn withCompReferences(compReferences)</code></li> <li><code>fn withCompReferencesMixin(compReferences)</code></li> <li><code>obj spec.appReferences.compReferences</code><ul> <li><code>fn withCompName(compName)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>obj spec.appReferences.compReferences.traits</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.appReferences.compReferences.workload</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workloadRefs</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/healthScope/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/healthScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HealthScope</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-spec","title":"obj spec","text":"<p>\"A HealthScopeSpec defines the desired state of a HealthScope.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithappreferences","title":"fn spec.withAppReferences","text":"<pre><code>withAppReferences(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithappreferencesmixin","title":"fn spec.withAppReferencesMixin","text":"<pre><code>withAppReferencesMixin(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithprobe-interval","title":"fn spec.withProbe-Interval","text":"<pre><code>withProbe-Interval(probe_interval)\n</code></pre> <p>\"ProbeInterval is the amount of time in seconds between probing tries.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithprobe-timeout","title":"fn spec.withProbe-Timeout","text":"<pre><code>withProbe-Timeout(probe_timeout)\n</code></pre> <p>\"ProbeTimeout is the amount of time in seconds to wait when receiving a response before marked failure.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithworkloadrefs","title":"fn spec.withWorkloadRefs","text":"<pre><code>withWorkloadRefs(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specwithworkloadrefsmixin","title":"fn spec.withWorkloadRefsMixin","text":"<pre><code>withWorkloadRefsMixin(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-specappreferences","title":"obj spec.appReferences","text":"<p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferenceswithappname","title":"fn spec.appReferences.withAppName","text":"<pre><code>withAppName(appName)\n</code></pre>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferences","title":"fn spec.appReferences.withCompReferences","text":"<pre><code>withCompReferences(compReferences)\n</code></pre>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferencesmixin","title":"fn spec.appReferences.withCompReferencesMixin","text":"<pre><code>withCompReferencesMixin(compReferences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-specappreferencescompreferences","title":"obj spec.appReferences.compReferences","text":""},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithcompname","title":"fn spec.appReferences.compReferences.withCompName","text":"<pre><code>withCompName(compName)\n</code></pre>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraits","title":"fn spec.appReferences.compReferences.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraitsmixin","title":"fn spec.appReferences.compReferences.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-specappreferencescompreferencestraits","title":"obj spec.appReferences.compReferences.traits","text":""},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithapiversion","title":"fn spec.appReferences.compReferences.traits.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithfieldpath","title":"fn spec.appReferences.compReferences.traits.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithkind","title":"fn spec.appReferences.compReferences.traits.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithname","title":"fn spec.appReferences.compReferences.traits.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithnamespace","title":"fn spec.appReferences.compReferences.traits.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithresourceversion","title":"fn spec.appReferences.compReferences.traits.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithuid","title":"fn spec.appReferences.compReferences.traits.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-specappreferencescompreferencesworkload","title":"obj spec.appReferences.compReferences.workload","text":"<p>\"ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.  1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.  2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular     restrictions like, \\\"must refer only to types A and B\\\" or \\\"UID not honored\\\" or \\\"name must be restricted\\\".     Those cannot be well described when embedded.  3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.  4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity     during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple     and the version of the actual struct is irrelevant.  5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type     will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithapiversion","title":"fn spec.appReferences.compReferences.workload.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithfieldpath","title":"fn spec.appReferences.compReferences.workload.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithkind","title":"fn spec.appReferences.compReferences.workload.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithname","title":"fn spec.appReferences.compReferences.workload.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithnamespace","title":"fn spec.appReferences.compReferences.workload.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithresourceversion","title":"fn spec.appReferences.compReferences.workload.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithuid","title":"fn spec.appReferences.compReferences.workload.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#obj-specworkloadrefs","title":"obj spec.workloadRefs","text":"<p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithapiversion","title":"fn spec.workloadRefs.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithfieldpath","title":"fn spec.workloadRefs.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithkind","title":"fn spec.workloadRefs.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithname","title":"fn spec.workloadRefs.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithnamespace","title":"fn spec.workloadRefs.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithresourceversion","title":"fn spec.workloadRefs.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/healthScope/#fn-specworkloadrefswithuid","title":"fn spec.workloadRefs.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/","title":"core.v1alpha2.manualScalerTrait","text":"<p>\"A ManualScalerTrait determines how many replicas a workload should have.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReplicaCount(replicaCount)</code></li> <li><code>obj spec.workloadRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ManualScalerTrait</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#obj-spec","title":"obj spec","text":"<p>\"A ManualScalerTraitSpec defines the desired state of a ManualScalerTrait.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specwithreplicacount","title":"fn spec.withReplicaCount","text":"<pre><code>withReplicaCount(replicaCount)\n</code></pre> <p>\"ReplicaCount of the workload this trait applies to.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#obj-specworkloadref","title":"obj spec.workloadRef","text":"<p>\"WorkloadReference to the workload this trait applies to.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithapiversion","title":"fn spec.workloadRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithfieldpath","title":"fn spec.workloadRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithkind","title":"fn spec.workloadRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithname","title":"fn spec.workloadRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithnamespace","title":"fn spec.workloadRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithresourceversion","title":"fn spec.workloadRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/manualScalerTrait/#fn-specworkloadrefwithuid","title":"fn spec.workloadRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/","title":"core.v1alpha2.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/","title":"core.v1alpha2.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/","title":"core.v1alpha2.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/","title":"core.v1beta1","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>definitionRevision</li> <li>policyDefinition</li> <li>resourceTracker</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workflow</li> <li>workflowStepDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.5/core/v1beta1/application/","title":"core.v1beta1.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.5/core/v1beta1/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/application/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.5/core/v1beta1/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithdependson","title":"fn spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithdependsonmixin","title":"fn spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithexternalrevision","title":"fn spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithinputs","title":"fn spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithinputsmixin","title":"fn spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithoutputs","title":"fn spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithoutputsmixin","title":"fn spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithproperties","title":"fn spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithpropertiesmixin","title":"fn spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-speccomponentsinputs","title":"obj spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentsinputswithfrom","title":"fn spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentsinputswithparameterkey","title":"fn spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-speccomponentsoutputs","title":"obj spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentsoutputswithname","title":"fn spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentsoutputswithvaluefrom","title":"fn spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-speccomponentstraitswithtype","title":"fn spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specpolicies","title":"obj spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specpolicieswithname","title":"fn spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specpolicieswithproperties","title":"fn spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specpolicieswithpropertiesmixin","title":"fn spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specpolicieswithtype","title":"fn spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowwithref","title":"fn spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowmode","title":"obj spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowmodewithsteps","title":"fn spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowmodewithsubsteps","title":"fn spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/","title":"core.v1beta1.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>fn withPolicyDefinitions(policyDefinitions)</code></li> <li><code>fn withPolicyDefinitionsMixin(policyDefinitions)</code></li> <li><code>fn withReferredObjects(referredObjects)</code></li> <li><code>fn withReferredObjectsMixin(referredObjects)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withScopeGVK(scopeGVK)</code></li> <li><code>fn withScopeGVKMixin(scopeGVK)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitions(workflowStepDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitionsMixin(workflowStepDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.application.spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies records the external policies\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies records the external policies\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitions","title":"fn spec.withPolicyDefinitions","text":"<pre><code>withPolicyDefinitions(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitionsmixin","title":"fn spec.withPolicyDefinitionsMixin","text":"<pre><code>withPolicyDefinitionsMixin(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithreferredobjects","title":"fn spec.withReferredObjects","text":"<pre><code>withReferredObjects(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithreferredobjectsmixin","title":"fn spec.withReferredObjectsMixin","text":"<pre><code>withReferredObjectsMixin(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithscopegvk","title":"fn spec.withScopeGVK","text":"<pre><code>withScopeGVK(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithscopegvkmixin","title":"fn spec.withScopeGVKMixin","text":"<pre><code>withScopeGVKMixin(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitions","title":"fn spec.withWorkflowStepDefinitions","text":"<pre><code>withWorkflowStepDefinitions(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitionsmixin","title":"fn spec.withWorkflowStepDefinitionsMixin","text":"<pre><code>withWorkflowStepDefinitionsMixin(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpolicies","title":"fn spec.application.spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpoliciesmixin","title":"fn spec.application.spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependson","title":"fn spec.application.spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependsonmixin","title":"fn spec.application.spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithexternalrevision","title":"fn spec.application.spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputs","title":"fn spec.application.spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputsmixin","title":"fn spec.application.spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputs","title":"fn spec.application.spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputsmixin","title":"fn spec.application.spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithproperties","title":"fn spec.application.spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithpropertiesmixin","title":"fn spec.application.spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsinputs","title":"obj spec.application.spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithfrom","title":"fn spec.application.spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithparameterkey","title":"fn spec.application.spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsoutputs","title":"obj spec.application.spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithname","title":"fn spec.application.spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithvaluefrom","title":"fn spec.application.spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithtype","title":"fn spec.application.spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecpolicies","title":"obj spec.application.spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithname","title":"fn spec.application.spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithproperties","title":"fn spec.application.spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithpropertiesmixin","title":"fn spec.application.spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithtype","title":"fn spec.application.spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflow","title":"obj spec.application.spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithref","title":"fn spec.application.spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithsteps","title":"fn spec.application.spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithstepsmixin","title":"fn spec.application.spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowmode","title":"obj spec.application.spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsteps","title":"fn spec.application.spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsubsteps","title":"fn spec.application.spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowsteps","title":"obj spec.application.spec.workflow.steps","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependson","title":"fn spec.application.spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithif","title":"fn spec.application.spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputs","title":"fn spec.application.spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithname","title":"fn spec.application.spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputs","title":"fn spec.application.spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithproperties","title":"fn spec.application.spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubsteps","title":"fn spec.application.spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubstepsmixin","title":"fn spec.application.spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtimeout","title":"fn spec.application.spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtype","title":"fn spec.application.spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsinputs","title":"obj spec.application.spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsmeta","title":"obj spec.application.spec.workflow.steps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsoutputs","title":"obj spec.application.spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubsteps","title":"obj spec.application.spec.workflow.steps.subSteps","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependson","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithif","title":"fn spec.application.spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputs","title":"fn spec.application.spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithname","title":"fn spec.application.spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputs","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithproperties","title":"fn spec.application.spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtimeout","title":"fn spec.application.spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtype","title":"fn spec.application.spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsinputs","title":"obj spec.application.spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsmeta","title":"obj spec.application.spec.workflow.steps.subSteps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsoutputs","title":"obj spec.application.spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow records the external workflow\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowwithapiversion","title":"fn spec.workflow.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowwithkind","title":"fn spec.workflow.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowmetadata","title":"obj spec.workflow.metadata","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotations","title":"fn spec.workflow.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotationsmixin","title":"fn spec.workflow.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizers","title":"fn spec.workflow.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizersmixin","title":"fn spec.workflow.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabels","title":"fn spec.workflow.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabelsmixin","title":"fn spec.workflow.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithname","title":"fn spec.workflow.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithnamespace","title":"fn spec.workflow.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/componentDefinition/","title":"core.v1beta1.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.5/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/","title":"core.v1beta1.definitionRevision","text":"<p>\"DefinitionRevision is the Schema for the DefinitionRevision API\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDefinitionType(definitionType)</code></li> <li><code>fn withRevision(revision)</code></li> <li><code>fn withRevisionHash(revisionHash)</code></li> <li><code>obj spec.componentDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.componentDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.componentDefinition.spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic</code><ul> <li><code>obj spec.componentDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.policyDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.policyDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic</code><ul> <li><code>obj spec.policyDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.traitDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withSkipRevisionAffect(skipRevisionAffect)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.traitDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic</code><ul> <li><code>obj spec.traitDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.workflowStepDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec</code><ul> <li><code>obj spec.workflowStepDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic</code><ul> <li><code>obj spec.workflowStepDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/definitionRevision/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/definitionRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DefinitionRevision</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spec","title":"obj spec","text":"<p>\"DefinitionRevisionSpec is the spec of DefinitionRevision\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specwithdefinitiontype","title":"fn spec.withDefinitionType","text":"<pre><code>withDefinitionType(definitionType)\n</code></pre> <p>\"DefinitionType\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specwithrevision","title":"fn spec.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre> <p>\"Revision record revision number of DefinitionRevision\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specwithrevisionhash","title":"fn spec.withRevisionHash","text":"<pre><code>withRevisionHash(revisionHash)\n</code></pre> <p>\"RevisionHash record the hash value of the spec of DefinitionRevision object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinition","title":"obj spec.componentDefinition","text":"<p>\"ComponentDefinition records the snapshot of the created/modified ComponentDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithapiversion","title":"fn spec.componentDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithkind","title":"fn spec.componentDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionmetadata","title":"obj spec.componentDefinition.metadata","text":""},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotations","title":"fn spec.componentDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotationsmixin","title":"fn spec.componentDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizers","title":"fn spec.componentDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizersmixin","title":"fn spec.componentDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabels","title":"fn spec.componentDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabelsmixin","title":"fn spec.componentDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithname","title":"fn spec.componentDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithnamespace","title":"fn spec.componentDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspec","title":"obj spec.componentDefinition.spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekinds","title":"fn spec.componentDefinition.spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekindsmixin","title":"fn spec.componentDefinition.spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextension","title":"fn spec.componentDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextensionmixin","title":"fn spec.componentDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithpodspecpath","title":"fn spec.componentDefinition.spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithrevisionlabel","title":"fn spec.componentDefinition.spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecchildresourcekinds","title":"obj spec.componentDefinition.spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithapiversion","title":"fn spec.componentDefinition.spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithkind","title":"fn spec.componentDefinition.spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselector","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselectormixin","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematic","title":"obj spec.componentDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematiccue","title":"obj spec.componentDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematiccuewithtemplate","title":"fn spec.componentDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematichelm","title":"obj spec.componentDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrelease","title":"fn spec.componentDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithreleasemixin","title":"fn spec.componentDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepository","title":"fn spec.componentDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.componentDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickube","title":"obj spec.componentDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparameters","title":"fn spec.componentDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparametersmixin","title":"fn spec.componentDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplate","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplatemixin","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickubeparameters","title":"obj spec.componentDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithdescription","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithname","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithrequired","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithtype","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraform","title":"obj spec.componentDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithconfiguration","title":"fn spec.componentDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithcustomregion","title":"fn spec.componentDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.componentDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithpath","title":"fn spec.componentDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithtype","title":"fn spec.componentDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformproviderref","title":"obj spec.componentDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkload","title":"obj spec.componentDefinition.spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloadwithtype","title":"fn spec.componentDefinition.spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkloaddefinition","title":"obj spec.componentDefinition.spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithapiversion","title":"fn spec.componentDefinition.spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithkind","title":"fn spec.componentDefinition.spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinition","title":"obj spec.policyDefinition","text":"<p>\"PolicyDefinition records the snapshot of the created/modified PolicyDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithapiversion","title":"fn spec.policyDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithkind","title":"fn spec.policyDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionmetadata","title":"obj spec.policyDefinition.metadata","text":""},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotations","title":"fn spec.policyDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotationsmixin","title":"fn spec.policyDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizers","title":"fn spec.policyDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizersmixin","title":"fn spec.policyDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabels","title":"fn spec.policyDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabelsmixin","title":"fn spec.policyDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithname","title":"fn spec.policyDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithnamespace","title":"fn spec.policyDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspec","title":"obj spec.policyDefinition.spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecwithmanagehealthcheck","title":"fn spec.policyDefinition.spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecdefinitionref","title":"obj spec.policyDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithname","title":"fn spec.policyDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithversion","title":"fn spec.policyDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematic","title":"obj spec.policyDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematiccue","title":"obj spec.policyDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematiccuewithtemplate","title":"fn spec.policyDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematichelm","title":"obj spec.policyDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrelease","title":"fn spec.policyDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithreleasemixin","title":"fn spec.policyDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepository","title":"fn spec.policyDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepositorymixin","title":"fn spec.policyDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickube","title":"obj spec.policyDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparameters","title":"fn spec.policyDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparametersmixin","title":"fn spec.policyDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplate","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplatemixin","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickubeparameters","title":"obj spec.policyDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithdescription","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithname","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithrequired","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithtype","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraform","title":"obj spec.policyDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithconfiguration","title":"fn spec.policyDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithcustomregion","title":"fn spec.policyDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithdeleteresource","title":"fn spec.policyDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithpath","title":"fn spec.policyDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithtype","title":"fn spec.policyDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformproviderref","title":"obj spec.policyDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinition","title":"obj spec.traitDefinition","text":"<p>\"TraitDefinition records the snapshot of the created/modified TraitDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithapiversion","title":"fn spec.traitDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithkind","title":"fn spec.traitDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionmetadata","title":"obj spec.traitDefinition.metadata","text":""},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotations","title":"fn spec.traitDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotationsmixin","title":"fn spec.traitDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizers","title":"fn spec.traitDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizersmixin","title":"fn spec.traitDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabels","title":"fn spec.traitDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabelsmixin","title":"fn spec.traitDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithname","title":"fn spec.traitDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithnamespace","title":"fn spec.traitDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspec","title":"obj spec.traitDefinition.spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloads","title":"fn spec.traitDefinition.spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloadsmixin","title":"fn spec.traitDefinition.spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswith","title":"fn spec.traitDefinition.spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswithmixin","title":"fn spec.traitDefinition.spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithcontrolplaneonly","title":"fn spec.traitDefinition.spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextension","title":"fn spec.traitDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextensionmixin","title":"fn spec.traitDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithmanageworkload","title":"fn spec.traitDefinition.spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithpoddisruptive","title":"fn spec.traitDefinition.spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithrevisionenabled","title":"fn spec.traitDefinition.spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithskiprevisionaffect","title":"fn spec.traitDefinition.spec.withSkipRevisionAffect","text":"<pre><code>withSkipRevisionAffect(skipRevisionAffect)\n</code></pre> <p>\"SkipRevisionAffect defines the update this trait will not generate a new application Revision\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithworkloadrefpath","title":"fn spec.traitDefinition.spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecdefinitionref","title":"obj spec.traitDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithname","title":"fn spec.traitDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithversion","title":"fn spec.traitDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematic","title":"obj spec.traitDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematiccue","title":"obj spec.traitDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematiccuewithtemplate","title":"fn spec.traitDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematichelm","title":"obj spec.traitDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrelease","title":"fn spec.traitDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithreleasemixin","title":"fn spec.traitDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepository","title":"fn spec.traitDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.traitDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickube","title":"obj spec.traitDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparameters","title":"fn spec.traitDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparametersmixin","title":"fn spec.traitDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplate","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplatemixin","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickubeparameters","title":"obj spec.traitDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithdescription","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithname","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithrequired","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithtype","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraform","title":"obj spec.traitDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithconfiguration","title":"fn spec.traitDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithcustomregion","title":"fn spec.traitDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.traitDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithpath","title":"fn spec.traitDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithtype","title":"fn spec.traitDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformproviderref","title":"obj spec.traitDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinition","title":"obj spec.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition records the snapshot of the created/modified WorkflowStepDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithapiversion","title":"fn spec.workflowStepDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithkind","title":"fn spec.workflowStepDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionmetadata","title":"obj spec.workflowStepDefinition.metadata","text":""},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotations","title":"fn spec.workflowStepDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotationsmixin","title":"fn spec.workflowStepDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizers","title":"fn spec.workflowStepDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizersmixin","title":"fn spec.workflowStepDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabels","title":"fn spec.workflowStepDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabelsmixin","title":"fn spec.workflowStepDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithname","title":"fn spec.workflowStepDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithnamespace","title":"fn spec.workflowStepDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspec","title":"obj spec.workflowStepDefinition.spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecdefinitionref","title":"obj spec.workflowStepDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithname","title":"fn spec.workflowStepDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithversion","title":"fn spec.workflowStepDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematic","title":"obj spec.workflowStepDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematiccue","title":"obj spec.workflowStepDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematiccuewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematichelm","title":"obj spec.workflowStepDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrelease","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithreleasemixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepository","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickube","title":"obj spec.workflowStepDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparameters","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparametersmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplatemixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickubeparameters","title":"obj spec.workflowStepDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithdescription","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithname","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithrequired","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithtype","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraform","title":"obj spec.workflowStepDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithconfiguration","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithcustomregion","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithpath","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithtype","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformproviderref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/","title":"core.v1beta1.policyDefinition","text":"<p>\"PolicyDefinition is the Schema for the policydefinitions API\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/policyDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/policyDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PolicyDefinition</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-spec","title":"obj spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specwithmanagehealthcheck","title":"fn spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/","title":"core.v1beta1.resourceTracker","text":"<p>\"An ResourceTracker represents a tracker for track cross namespace resources\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationGeneration(applicationGeneration)</code></li> <li><code>fn withManagedResources(managedResources)</code></li> <li><code>fn withManagedResourcesMixin(managedResources)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.managedResources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withCluster(cluster)</code></li> <li><code>fn withComponent(component)</code></li> <li><code>fn withCreator(creator)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSkipGC(skipGC)</code></li> <li><code>fn withTrait(trait)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/resourceTracker/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/resourceTracker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ResourceTracker</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#obj-spec","title":"obj spec","text":"<p>\"ResourceTrackerSpec define the spec of resourceTracker\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specwithapplicationgeneration","title":"fn spec.withApplicationGeneration","text":"<pre><code>withApplicationGeneration(applicationGeneration)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specwithmanagedresources","title":"fn spec.withManagedResources","text":"<pre><code>withManagedResources(managedResources)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specwithmanagedresourcesmixin","title":"fn spec.withManagedResourcesMixin","text":"<pre><code>withManagedResourcesMixin(managedResources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ResourceTrackerType defines the type of resourceTracker\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#obj-specmanagedresources","title":"obj spec.managedResources","text":""},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithapiversion","title":"fn spec.managedResources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcluster","title":"fn spec.managedResources.withCluster","text":"<pre><code>withCluster(cluster)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcomponent","title":"fn spec.managedResources.withComponent","text":"<pre><code>withComponent(component)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcreator","title":"fn spec.managedResources.withCreator","text":"<pre><code>withCreator(creator)\n</code></pre> <p>\"ResourceCreatorRole defines the resource creator.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithdeleted","title":"fn spec.managedResources.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted marks the resource to be deleted\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithenv","title":"fn spec.managedResources.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithfieldpath","title":"fn spec.managedResources.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithkind","title":"fn spec.managedResources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithname","title":"fn spec.managedResources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithnamespace","title":"fn spec.managedResources.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithraw","title":"fn spec.managedResources.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithrawmixin","title":"fn spec.managedResources.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithresourceversion","title":"fn spec.managedResources.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithskipgc","title":"fn spec.managedResources.withSkipGC","text":"<pre><code>withSkipGC(skipGC)\n</code></pre> <p>\"SkipGC marks the resource to skip gc\"</p>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithtrait","title":"fn spec.managedResources.withTrait","text":"<pre><code>withTrait(trait)\n</code></pre>"},{"location":"1.5/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithuid","title":"fn spec.managedResources.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/","title":"core.v1beta1.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/","title":"core.v1beta1.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withSkipRevisionAffect(skipRevisionAffect)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithcontrolplaneonly","title":"fn spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithmanageworkload","title":"fn spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithskiprevisionaffect","title":"fn spec.withSkipRevisionAffect","text":"<pre><code>withSkipRevisionAffect(skipRevisionAffect)\n</code></pre> <p>\"SkipRevisionAffect defines the update this trait will not generate a new application Revision\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/workflow/","title":"core.v1beta1.workflow","text":"<p>\"Workflow defines workflow steps and other attributes\"</p>"},{"location":"1.5/core/v1beta1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/workflow/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-withref","title":"fn withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/workflow/#obj-mode","title":"obj mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-modewithsteps","title":"fn mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-modewithsubsteps","title":"fn mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"WorkflowMode describes the mode of workflow\"</p>"},{"location":"1.5/core/v1beta1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithtimeout","title":"fn steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepsmeta","title":"obj steps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepsmetawithalias","title":"fn steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithtimeout","title":"fn steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepssubstepsmeta","title":"obj steps.subSteps.meta","text":"<p>\"WorkflowStepMeta contains the meta data of a workflow step\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepsmetawithalias","title":"fn steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/","title":"core.v1beta1.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition is the Schema for the workflowstepdefinitions API\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkflowStepDefinition</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-spec","title":"obj spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/","title":"core.v1beta1.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.5/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.5/standard/","title":"standard","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.5/standard/v1alpha1/","title":"standard.v1alpha1","text":"<ul> <li>rollout</li> </ul>"},{"location":"1.5/standard/v1alpha1/rollout/","title":"standard.v1alpha1.rollout","text":"<p>\"Rollout is the Schema for the Rollout API\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentName(componentName)</code></li> <li><code>fn withSourceRevisionName(sourceRevisionName)</code></li> <li><code>fn withTargetRevisionName(targetRevisionName)</code></li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.5/standard/v1alpha1/rollout/#fields","title":"Fields","text":""},{"location":"1.5/standard/v1alpha1/rollout/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Rollout</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-spec","title":"obj spec","text":"<p>\"RolloutSpec defines how to describe an update between different compRevision\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specwithcomponentname","title":"fn spec.withComponentName","text":"<pre><code>withComponentName(componentName)\n</code></pre> <p>\"ComponentName specify the component name\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specwithsourcerevisionname","title":"fn spec.withSourceRevisionName","text":"<pre><code>withSourceRevisionName(sourceRevisionName)\n</code></pre> <p>\"SourceRevisionName contains the name of the componentRevisionName  that we need to upgrade from. it can be empty only when it's the first time to deploy the application\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specwithtargetrevisionname","title":"fn spec.withTargetRevisionName","text":"<pre><code>withTargetRevisionName(targetRevisionName)\n</code></pre> <p>\"TargetRevisionName contains the name of the componentRevisionName that we need to upgrade to.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.5/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/","title":"kubevela","text":"<pre><code>local kubevela = import \"github.com/jsonnet-libs/kubevela-libsonnet/1.6/main.libsonnet\"\n</code></pre> <ul> <li>core</li> <li>standard</li> </ul>"},{"location":"1.6/core/","title":"core","text":"<ul> <li>v1alpha1</li> <li>v1alpha2</li> <li>v1beta1</li> </ul>"},{"location":"1.6/core/v1alpha1/","title":"core.v1alpha1","text":"<ul> <li>envBinding</li> <li>policy</li> <li>workflow</li> </ul>"},{"location":"1.6/core/v1alpha1/envBinding/","title":"core.v1alpha1.envBinding","text":"<p>\"EnvBinding is the Schema for the EnvBinding API\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppTemplate(appTemplate)</code></li> <li><code>fn withAppTemplateMixin(appTemplate)</code></li> <li><code>fn withEngine(engine)</code></li> <li><code>fn withEnvs(envs)</code></li> <li><code>fn withEnvsMixin(envs)</code></li> <li><code>obj spec.envs</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.envs.patch</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.envs.patch.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.envs.patch.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.envs.placement</code><ul> <li><code>obj spec.envs.placement.clusterSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.envs.placement.namespaceSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.envs.selector</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.outputResourcesTo</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha1/envBinding/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha1/envBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvBinding</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-spec","title":"obj spec","text":"<p>\"A EnvBindingSpec defines the desired state of a EnvBinding.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specwithapptemplate","title":"fn spec.withAppTemplate","text":"<pre><code>withAppTemplate(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specwithapptemplatemixin","title":"fn spec.withAppTemplateMixin","text":"<pre><code>withAppTemplateMixin(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specwithengine","title":"fn spec.withEngine","text":"<pre><code>withEngine(engine)\n</code></pre> <p>\"ClusterManagementEngine represents a multi-cluster management solution\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specwithenvs","title":"fn spec.withEnvs","text":"<pre><code>withEnvs(envs)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specwithenvsmixin","title":"fn spec.withEnvsMixin","text":"<pre><code>withEnvsMixin(envs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvs","title":"obj spec.envs","text":""},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvswithname","title":"fn spec.envs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvspatch","title":"obj spec.envs.patch","text":"<p>\"EnvPatch specify the parameter configuration for different environments\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponents","title":"fn spec.envs.patch.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponentsmixin","title":"fn spec.envs.patch.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvspatchcomponents","title":"obj spec.envs.patch.components","text":""},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependson","title":"fn spec.envs.patch.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependsonmixin","title":"fn spec.envs.patch.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithexternalrevision","title":"fn spec.envs.patch.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputs","title":"fn spec.envs.patch.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputsmixin","title":"fn spec.envs.patch.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithname","title":"fn spec.envs.patch.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputs","title":"fn spec.envs.patch.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputsmixin","title":"fn spec.envs.patch.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithproperties","title":"fn spec.envs.patch.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithpropertiesmixin","title":"fn spec.envs.patch.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopes","title":"fn spec.envs.patch.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopesmixin","title":"fn spec.envs.patch.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraits","title":"fn spec.envs.patch.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraitsmixin","title":"fn spec.envs.patch.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtype","title":"fn spec.envs.patch.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsinputs","title":"obj spec.envs.patch.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithfrom","title":"fn spec.envs.patch.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithparameterkey","title":"fn spec.envs.patch.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsoutputs","title":"obj spec.envs.patch.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithname","title":"fn spec.envs.patch.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithvaluefrom","title":"fn spec.envs.patch.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvspatchcomponentstraits","title":"obj spec.envs.patch.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithproperties","title":"fn spec.envs.patch.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithpropertiesmixin","title":"fn spec.envs.patch.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithtype","title":"fn spec.envs.patch.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvsplacement","title":"obj spec.envs.placement","text":"<p>\"EnvPlacement defines the placement rules for an app.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvsplacementclusterselector","title":"obj spec.envs.placement.clusterSelector","text":"<p>\"ClusterSelector defines the rules to select a Cluster resource. Either name or labels is needed.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabels","title":"fn spec.envs.placement.clusterSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabelsmixin","title":"fn spec.envs.placement.clusterSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithname","title":"fn spec.envs.placement.clusterSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the cluster.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvsplacementnamespaceselector","title":"obj spec.envs.placement.namespaceSelector","text":"<p>\"NamespaceSelector defines the rules to select a Namespace resource. Either name or labels is needed.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabels","title":"fn spec.envs.placement.namespaceSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabelsmixin","title":"fn spec.envs.placement.namespaceSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithname","title":"fn spec.envs.placement.namespaceSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the namespace.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specenvsselector","title":"obj spec.envs.selector","text":"<p>\"EnvSelector defines which components should this env contains\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponents","title":"fn spec.envs.selector.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponentsmixin","title":"fn spec.envs.selector.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/envBinding/#obj-specoutputresourcesto","title":"obj spec.outputResourcesTo","text":"<p>\"OutputResourcesTo specifies the namespace and name of a ConfigMap which store the resources rendered after differentiated configuration\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specoutputresourcestowithname","title":"fn spec.outputResourcesTo.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1alpha1/envBinding/#fn-specoutputresourcestowithnamespace","title":"fn spec.outputResourcesTo.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1alpha1/policy/","title":"core.v1alpha1.policy","text":"<p>\"Policy is the Schema for the policy API\"</p>"},{"location":"1.6/core/v1alpha1/policy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha1/policy/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha1/policy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Policy</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-withproperties","title":"fn withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1alpha1/policy/#fn-withpropertiesmixin","title":"fn withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-withtype","title":"fn withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1alpha1/policy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha1/policy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha1/workflow/","title":"core.v1alpha1.workflow","text":"<p>\"Workflow is the Schema for the workflow API\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha1/workflow/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#obj-mode","title":"obj mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-modewithsteps","title":"fn mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-modewithsubsteps","title":"fn mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithtimeout","title":"fn steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepsmeta","title":"obj steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepsmetawithalias","title":"fn steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithtimeout","title":"fn steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepssubstepsmeta","title":"obj steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepsmetawithalias","title":"fn steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1alpha2/","title":"core.v1alpha2","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>healthScope</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.6/core/v1alpha2/application/","title":"core.v1alpha2.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.6/core/v1alpha2/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/application/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.6/core/v1alpha2/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithsettings","title":"fn spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithsettingsmixin","title":"fn spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentstraitswithname","title":"fn spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1alpha2/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/application/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/","title":"core.v1alpha2.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationConfiguration(applicationConfiguration)</code></li> <li><code>fn withApplicationConfigurationMixin(applicationConfiguration)</code></li> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.components</code><ul> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfiguration","title":"fn spec.withApplicationConfiguration","text":"<pre><code>withApplicationConfiguration(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfigurationmixin","title":"fn spec.withApplicationConfigurationMixin","text":"<pre><code>withApplicationConfigurationMixin(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettings","title":"fn spec.application.spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettingsmixin","title":"fn spec.application.spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithname","title":"fn spec.application.spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplan","title":"obj spec.application.spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithbatchpartition","title":"fn spec.application.spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetric","title":"fn spec.application.spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithnumbatches","title":"fn spec.application.spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithpaused","title":"fn spec.application.spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatches","title":"fn spec.application.spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatchesmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutstrategy","title":"fn spec.application.spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithtargetsize","title":"fn spec.application.spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetric","title":"obj spec.application.spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatches","title":"obj spec.application.spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlist","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithreplicas","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetric","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/core/v1alpha2/applicationRevision/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-speccomponentswithraw","title":"fn spec.components.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.6/core/v1alpha2/applicationRevision/#fn-speccomponentswithrawmixin","title":"fn spec.components.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/","title":"core.v1alpha2.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.6/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.6/core/v1alpha2/healthScope/","title":"core.v1alpha2.healthScope","text":"<p>\"A HealthScope determines an aggregate health status based of the health of components.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppReferences(appReferences)</code></li> <li><code>fn withAppReferencesMixin(appReferences)</code></li> <li><code>fn withProbe-Interval(probe_interval)</code></li> <li><code>fn withProbe-Timeout(probe_timeout)</code></li> <li><code>fn withWorkloadRefs(workloadRefs)</code></li> <li><code>fn withWorkloadRefsMixin(workloadRefs)</code></li> <li><code>obj spec.appReferences</code><ul> <li><code>fn withAppName(appName)</code></li> <li><code>fn withCompReferences(compReferences)</code></li> <li><code>fn withCompReferencesMixin(compReferences)</code></li> <li><code>obj spec.appReferences.compReferences</code><ul> <li><code>fn withCompName(compName)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>obj spec.appReferences.compReferences.traits</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.appReferences.compReferences.workload</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workloadRefs</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/healthScope/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/healthScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HealthScope</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-spec","title":"obj spec","text":"<p>\"A HealthScopeSpec defines the desired state of a HealthScope.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithappreferences","title":"fn spec.withAppReferences","text":"<pre><code>withAppReferences(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithappreferencesmixin","title":"fn spec.withAppReferencesMixin","text":"<pre><code>withAppReferencesMixin(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithprobe-interval","title":"fn spec.withProbe-Interval","text":"<pre><code>withProbe-Interval(probe_interval)\n</code></pre> <p>\"ProbeInterval is the amount of time in seconds between probing tries.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithprobe-timeout","title":"fn spec.withProbe-Timeout","text":"<pre><code>withProbe-Timeout(probe_timeout)\n</code></pre> <p>\"ProbeTimeout is the amount of time in seconds to wait when receiving a response before marked failure.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithworkloadrefs","title":"fn spec.withWorkloadRefs","text":"<pre><code>withWorkloadRefs(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specwithworkloadrefsmixin","title":"fn spec.withWorkloadRefsMixin","text":"<pre><code>withWorkloadRefsMixin(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-specappreferences","title":"obj spec.appReferences","text":"<p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferenceswithappname","title":"fn spec.appReferences.withAppName","text":"<pre><code>withAppName(appName)\n</code></pre>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferences","title":"fn spec.appReferences.withCompReferences","text":"<pre><code>withCompReferences(compReferences)\n</code></pre>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferencesmixin","title":"fn spec.appReferences.withCompReferencesMixin","text":"<pre><code>withCompReferencesMixin(compReferences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-specappreferencescompreferences","title":"obj spec.appReferences.compReferences","text":""},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithcompname","title":"fn spec.appReferences.compReferences.withCompName","text":"<pre><code>withCompName(compName)\n</code></pre>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraits","title":"fn spec.appReferences.compReferences.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraitsmixin","title":"fn spec.appReferences.compReferences.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-specappreferencescompreferencestraits","title":"obj spec.appReferences.compReferences.traits","text":""},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithapiversion","title":"fn spec.appReferences.compReferences.traits.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithfieldpath","title":"fn spec.appReferences.compReferences.traits.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithkind","title":"fn spec.appReferences.compReferences.traits.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithname","title":"fn spec.appReferences.compReferences.traits.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithnamespace","title":"fn spec.appReferences.compReferences.traits.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithresourceversion","title":"fn spec.appReferences.compReferences.traits.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithuid","title":"fn spec.appReferences.compReferences.traits.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-specappreferencescompreferencesworkload","title":"obj spec.appReferences.compReferences.workload","text":"<p>\"ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.  1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.  2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular     restrictions like, \\\"must refer only to types A and B\\\" or \\\"UID not honored\\\" or \\\"name must be restricted\\\".     Those cannot be well described when embedded.  3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.  4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity     during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple     and the version of the actual struct is irrelevant.  5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type     will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithapiversion","title":"fn spec.appReferences.compReferences.workload.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithfieldpath","title":"fn spec.appReferences.compReferences.workload.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithkind","title":"fn spec.appReferences.compReferences.workload.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithname","title":"fn spec.appReferences.compReferences.workload.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithnamespace","title":"fn spec.appReferences.compReferences.workload.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithresourceversion","title":"fn spec.appReferences.compReferences.workload.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithuid","title":"fn spec.appReferences.compReferences.workload.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#obj-specworkloadrefs","title":"obj spec.workloadRefs","text":"<p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithapiversion","title":"fn spec.workloadRefs.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithfieldpath","title":"fn spec.workloadRefs.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithkind","title":"fn spec.workloadRefs.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithname","title":"fn spec.workloadRefs.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithnamespace","title":"fn spec.workloadRefs.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithresourceversion","title":"fn spec.workloadRefs.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/healthScope/#fn-specworkloadrefswithuid","title":"fn spec.workloadRefs.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/","title":"core.v1alpha2.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/","title":"core.v1alpha2.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/","title":"core.v1alpha2.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/","title":"core.v1beta1","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>definitionRevision</li> <li>policyDefinition</li> <li>resourceTracker</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workflowStepDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.6/core/v1beta1/application/","title":"core.v1beta1.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.6/core/v1beta1/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/application/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.6/core/v1beta1/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithdependson","title":"fn spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithdependsonmixin","title":"fn spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithexternalrevision","title":"fn spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithinputs","title":"fn spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithinputsmixin","title":"fn spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithoutputs","title":"fn spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithoutputsmixin","title":"fn spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithproperties","title":"fn spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithpropertiesmixin","title":"fn spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-speccomponentsinputs","title":"obj spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentsinputswithfrom","title":"fn spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentsinputswithparameterkey","title":"fn spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-speccomponentsoutputs","title":"obj spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentsoutputswithname","title":"fn spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentsoutputswithvaluefrom","title":"fn spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-speccomponentstraitswithtype","title":"fn spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specpolicies","title":"obj spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specpolicieswithname","title":"fn spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specpolicieswithproperties","title":"fn spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specpolicieswithpropertiesmixin","title":"fn spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specpolicieswithtype","title":"fn spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowwithref","title":"fn spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowmode","title":"obj spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowmodewithsteps","title":"fn spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowmodewithsubsteps","title":"fn spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/","title":"core.v1beta1.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>fn withPolicyDefinitions(policyDefinitions)</code></li> <li><code>fn withPolicyDefinitionsMixin(policyDefinitions)</code></li> <li><code>fn withReferredObjects(referredObjects)</code></li> <li><code>fn withReferredObjectsMixin(referredObjects)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withScopeGVK(scopeGVK)</code></li> <li><code>fn withScopeGVKMixin(scopeGVK)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitions(workflowStepDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitionsMixin(workflowStepDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.application.spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies records the external policies\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies records the external policies\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitions","title":"fn spec.withPolicyDefinitions","text":"<pre><code>withPolicyDefinitions(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitionsmixin","title":"fn spec.withPolicyDefinitionsMixin","text":"<pre><code>withPolicyDefinitionsMixin(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithreferredobjects","title":"fn spec.withReferredObjects","text":"<pre><code>withReferredObjects(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithreferredobjectsmixin","title":"fn spec.withReferredObjectsMixin","text":"<pre><code>withReferredObjectsMixin(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithscopegvk","title":"fn spec.withScopeGVK","text":"<pre><code>withScopeGVK(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithscopegvkmixin","title":"fn spec.withScopeGVKMixin","text":"<pre><code>withScopeGVKMixin(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitions","title":"fn spec.withWorkflowStepDefinitions","text":"<pre><code>withWorkflowStepDefinitions(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitionsmixin","title":"fn spec.withWorkflowStepDefinitionsMixin","text":"<pre><code>withWorkflowStepDefinitionsMixin(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpolicies","title":"fn spec.application.spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpoliciesmixin","title":"fn spec.application.spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependson","title":"fn spec.application.spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependsonmixin","title":"fn spec.application.spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithexternalrevision","title":"fn spec.application.spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputs","title":"fn spec.application.spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputsmixin","title":"fn spec.application.spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputs","title":"fn spec.application.spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputsmixin","title":"fn spec.application.spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithproperties","title":"fn spec.application.spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithpropertiesmixin","title":"fn spec.application.spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsinputs","title":"obj spec.application.spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithfrom","title":"fn spec.application.spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithparameterkey","title":"fn spec.application.spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsoutputs","title":"obj spec.application.spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithname","title":"fn spec.application.spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithvaluefrom","title":"fn spec.application.spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithtype","title":"fn spec.application.spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecpolicies","title":"obj spec.application.spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithname","title":"fn spec.application.spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithproperties","title":"fn spec.application.spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithpropertiesmixin","title":"fn spec.application.spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithtype","title":"fn spec.application.spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflow","title":"obj spec.application.spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithref","title":"fn spec.application.spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithsteps","title":"fn spec.application.spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithstepsmixin","title":"fn spec.application.spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowmode","title":"obj spec.application.spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsteps","title":"fn spec.application.spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsubsteps","title":"fn spec.application.spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowsteps","title":"obj spec.application.spec.workflow.steps","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependson","title":"fn spec.application.spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithif","title":"fn spec.application.spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputs","title":"fn spec.application.spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithname","title":"fn spec.application.spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputs","title":"fn spec.application.spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithproperties","title":"fn spec.application.spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubsteps","title":"fn spec.application.spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubstepsmixin","title":"fn spec.application.spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtimeout","title":"fn spec.application.spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtype","title":"fn spec.application.spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsinputs","title":"obj spec.application.spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsmeta","title":"obj spec.application.spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsoutputs","title":"obj spec.application.spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubsteps","title":"obj spec.application.spec.workflow.steps.subSteps","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependson","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithif","title":"fn spec.application.spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputs","title":"fn spec.application.spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithname","title":"fn spec.application.spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputs","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithproperties","title":"fn spec.application.spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtimeout","title":"fn spec.application.spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtype","title":"fn spec.application.spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsinputs","title":"obj spec.application.spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsmeta","title":"obj spec.application.spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsoutputs","title":"obj spec.application.spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow records the external workflow\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowwithapiversion","title":"fn spec.workflow.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowwithkind","title":"fn spec.workflow.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowmetadata","title":"obj spec.workflow.metadata","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotations","title":"fn spec.workflow.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotationsmixin","title":"fn spec.workflow.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizers","title":"fn spec.workflow.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizersmixin","title":"fn spec.workflow.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabels","title":"fn spec.workflow.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabelsmixin","title":"fn spec.workflow.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithname","title":"fn spec.workflow.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithnamespace","title":"fn spec.workflow.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowmode","title":"obj spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmodewithsteps","title":"fn spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowmodewithsubsteps","title":"fn spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.6/core/v1beta1/componentDefinition/","title":"core.v1beta1.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.6/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/","title":"core.v1beta1.definitionRevision","text":"<p>\"DefinitionRevision is the Schema for the DefinitionRevision API\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDefinitionType(definitionType)</code></li> <li><code>fn withRevision(revision)</code></li> <li><code>fn withRevisionHash(revisionHash)</code></li> <li><code>obj spec.componentDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.componentDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.componentDefinition.spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic</code><ul> <li><code>obj spec.componentDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.policyDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.policyDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic</code><ul> <li><code>obj spec.policyDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.traitDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withStage(stage)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.traitDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic</code><ul> <li><code>obj spec.traitDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.workflowStepDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec</code><ul> <li><code>obj spec.workflowStepDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic</code><ul> <li><code>obj spec.workflowStepDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/definitionRevision/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/definitionRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DefinitionRevision</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spec","title":"obj spec","text":"<p>\"DefinitionRevisionSpec is the spec of DefinitionRevision\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specwithdefinitiontype","title":"fn spec.withDefinitionType","text":"<pre><code>withDefinitionType(definitionType)\n</code></pre> <p>\"DefinitionType\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specwithrevision","title":"fn spec.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre> <p>\"Revision record revision number of DefinitionRevision\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specwithrevisionhash","title":"fn spec.withRevisionHash","text":"<pre><code>withRevisionHash(revisionHash)\n</code></pre> <p>\"RevisionHash record the hash value of the spec of DefinitionRevision object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinition","title":"obj spec.componentDefinition","text":"<p>\"ComponentDefinition records the snapshot of the created/modified ComponentDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithapiversion","title":"fn spec.componentDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithkind","title":"fn spec.componentDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionmetadata","title":"obj spec.componentDefinition.metadata","text":""},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotations","title":"fn spec.componentDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotationsmixin","title":"fn spec.componentDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizers","title":"fn spec.componentDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizersmixin","title":"fn spec.componentDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabels","title":"fn spec.componentDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabelsmixin","title":"fn spec.componentDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithname","title":"fn spec.componentDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithnamespace","title":"fn spec.componentDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspec","title":"obj spec.componentDefinition.spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekinds","title":"fn spec.componentDefinition.spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekindsmixin","title":"fn spec.componentDefinition.spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextension","title":"fn spec.componentDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextensionmixin","title":"fn spec.componentDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithpodspecpath","title":"fn spec.componentDefinition.spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithrevisionlabel","title":"fn spec.componentDefinition.spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecchildresourcekinds","title":"obj spec.componentDefinition.spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithapiversion","title":"fn spec.componentDefinition.spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithkind","title":"fn spec.componentDefinition.spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselector","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselectormixin","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematic","title":"obj spec.componentDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematiccue","title":"obj spec.componentDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematiccuewithtemplate","title":"fn spec.componentDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematichelm","title":"obj spec.componentDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrelease","title":"fn spec.componentDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithreleasemixin","title":"fn spec.componentDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepository","title":"fn spec.componentDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.componentDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickube","title":"obj spec.componentDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparameters","title":"fn spec.componentDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparametersmixin","title":"fn spec.componentDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplate","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplatemixin","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickubeparameters","title":"obj spec.componentDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithdescription","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithname","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithrequired","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithtype","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraform","title":"obj spec.componentDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithconfiguration","title":"fn spec.componentDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithcustomregion","title":"fn spec.componentDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.componentDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithpath","title":"fn spec.componentDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithtype","title":"fn spec.componentDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformproviderref","title":"obj spec.componentDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkload","title":"obj spec.componentDefinition.spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloadwithtype","title":"fn spec.componentDefinition.spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkloaddefinition","title":"obj spec.componentDefinition.spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithapiversion","title":"fn spec.componentDefinition.spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithkind","title":"fn spec.componentDefinition.spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinition","title":"obj spec.policyDefinition","text":"<p>\"PolicyDefinition records the snapshot of the created/modified PolicyDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithapiversion","title":"fn spec.policyDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithkind","title":"fn spec.policyDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionmetadata","title":"obj spec.policyDefinition.metadata","text":""},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotations","title":"fn spec.policyDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotationsmixin","title":"fn spec.policyDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizers","title":"fn spec.policyDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizersmixin","title":"fn spec.policyDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabels","title":"fn spec.policyDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabelsmixin","title":"fn spec.policyDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithname","title":"fn spec.policyDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithnamespace","title":"fn spec.policyDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspec","title":"obj spec.policyDefinition.spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecwithmanagehealthcheck","title":"fn spec.policyDefinition.spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecdefinitionref","title":"obj spec.policyDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithname","title":"fn spec.policyDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithversion","title":"fn spec.policyDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematic","title":"obj spec.policyDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematiccue","title":"obj spec.policyDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematiccuewithtemplate","title":"fn spec.policyDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematichelm","title":"obj spec.policyDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrelease","title":"fn spec.policyDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithreleasemixin","title":"fn spec.policyDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepository","title":"fn spec.policyDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepositorymixin","title":"fn spec.policyDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickube","title":"obj spec.policyDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparameters","title":"fn spec.policyDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparametersmixin","title":"fn spec.policyDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplate","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplatemixin","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickubeparameters","title":"obj spec.policyDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithdescription","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithname","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithrequired","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithtype","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraform","title":"obj spec.policyDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithconfiguration","title":"fn spec.policyDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithcustomregion","title":"fn spec.policyDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithdeleteresource","title":"fn spec.policyDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithpath","title":"fn spec.policyDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithtype","title":"fn spec.policyDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformproviderref","title":"obj spec.policyDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinition","title":"obj spec.traitDefinition","text":"<p>\"TraitDefinition records the snapshot of the created/modified TraitDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithapiversion","title":"fn spec.traitDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithkind","title":"fn spec.traitDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionmetadata","title":"obj spec.traitDefinition.metadata","text":""},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotations","title":"fn spec.traitDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotationsmixin","title":"fn spec.traitDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizers","title":"fn spec.traitDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizersmixin","title":"fn spec.traitDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabels","title":"fn spec.traitDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabelsmixin","title":"fn spec.traitDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithname","title":"fn spec.traitDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithnamespace","title":"fn spec.traitDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspec","title":"obj spec.traitDefinition.spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloads","title":"fn spec.traitDefinition.spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloadsmixin","title":"fn spec.traitDefinition.spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswith","title":"fn spec.traitDefinition.spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswithmixin","title":"fn spec.traitDefinition.spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithcontrolplaneonly","title":"fn spec.traitDefinition.spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextension","title":"fn spec.traitDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextensionmixin","title":"fn spec.traitDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithmanageworkload","title":"fn spec.traitDefinition.spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithpoddisruptive","title":"fn spec.traitDefinition.spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithrevisionenabled","title":"fn spec.traitDefinition.spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithstage","title":"fn spec.traitDefinition.spec.withStage","text":"<pre><code>withStage(stage)\n</code></pre> <p>\"Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithworkloadrefpath","title":"fn spec.traitDefinition.spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecdefinitionref","title":"obj spec.traitDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithname","title":"fn spec.traitDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithversion","title":"fn spec.traitDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematic","title":"obj spec.traitDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematiccue","title":"obj spec.traitDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematiccuewithtemplate","title":"fn spec.traitDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematichelm","title":"obj spec.traitDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrelease","title":"fn spec.traitDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithreleasemixin","title":"fn spec.traitDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepository","title":"fn spec.traitDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.traitDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickube","title":"obj spec.traitDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparameters","title":"fn spec.traitDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparametersmixin","title":"fn spec.traitDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplate","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplatemixin","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickubeparameters","title":"obj spec.traitDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithdescription","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithname","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithrequired","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithtype","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraform","title":"obj spec.traitDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithconfiguration","title":"fn spec.traitDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithcustomregion","title":"fn spec.traitDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.traitDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithpath","title":"fn spec.traitDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithtype","title":"fn spec.traitDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformproviderref","title":"obj spec.traitDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinition","title":"obj spec.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition records the snapshot of the created/modified WorkflowStepDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithapiversion","title":"fn spec.workflowStepDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithkind","title":"fn spec.workflowStepDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionmetadata","title":"obj spec.workflowStepDefinition.metadata","text":""},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotations","title":"fn spec.workflowStepDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotationsmixin","title":"fn spec.workflowStepDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizers","title":"fn spec.workflowStepDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizersmixin","title":"fn spec.workflowStepDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabels","title":"fn spec.workflowStepDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabelsmixin","title":"fn spec.workflowStepDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithname","title":"fn spec.workflowStepDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithnamespace","title":"fn spec.workflowStepDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspec","title":"obj spec.workflowStepDefinition.spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecdefinitionref","title":"obj spec.workflowStepDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithname","title":"fn spec.workflowStepDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithversion","title":"fn spec.workflowStepDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematic","title":"obj spec.workflowStepDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematiccue","title":"obj spec.workflowStepDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematiccuewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematichelm","title":"obj spec.workflowStepDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrelease","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithreleasemixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepository","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickube","title":"obj spec.workflowStepDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparameters","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparametersmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplatemixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickubeparameters","title":"obj spec.workflowStepDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithdescription","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithname","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithrequired","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithtype","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraform","title":"obj spec.workflowStepDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithconfiguration","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithcustomregion","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithpath","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithtype","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformproviderref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/","title":"core.v1beta1.policyDefinition","text":"<p>\"PolicyDefinition is the Schema for the policydefinitions API\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/policyDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/policyDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PolicyDefinition</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-spec","title":"obj spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specwithmanagehealthcheck","title":"fn spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/","title":"core.v1beta1.resourceTracker","text":"<p>\"An ResourceTracker represents a tracker for track cross namespace resources\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationGeneration(applicationGeneration)</code></li> <li><code>fn withManagedResources(managedResources)</code></li> <li><code>fn withManagedResourcesMixin(managedResources)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.compression</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.managedResources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withCluster(cluster)</code></li> <li><code>fn withComponent(component)</code></li> <li><code>fn withCreator(creator)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSkipGC(skipGC)</code></li> <li><code>fn withTrait(trait)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/resourceTracker/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/resourceTracker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ResourceTracker</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#obj-spec","title":"obj spec","text":"<p>\"ResourceTrackerSpec define the spec of resourceTracker\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specwithapplicationgeneration","title":"fn spec.withApplicationGeneration","text":"<pre><code>withApplicationGeneration(applicationGeneration)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specwithmanagedresources","title":"fn spec.withManagedResources","text":"<pre><code>withManagedResources(managedResources)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specwithmanagedresourcesmixin","title":"fn spec.withManagedResourcesMixin","text":"<pre><code>withManagedResourcesMixin(managedResources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ResourceTrackerType defines the type of resourceTracker\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#obj-speccompression","title":"obj spec.compression","text":"<p>\"ResourceTrackerCompression the compression for ResourceTracker ManagedResources\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-speccompressionwithdata","title":"fn spec.compression.withData","text":"<pre><code>withData(data)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-speccompressionwithtype","title":"fn spec.compression.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type the compression type\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#obj-specmanagedresources","title":"obj spec.managedResources","text":""},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithapiversion","title":"fn spec.managedResources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcluster","title":"fn spec.managedResources.withCluster","text":"<pre><code>withCluster(cluster)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcomponent","title":"fn spec.managedResources.withComponent","text":"<pre><code>withComponent(component)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcreator","title":"fn spec.managedResources.withCreator","text":"<pre><code>withCreator(creator)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithdeleted","title":"fn spec.managedResources.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted marks the resource to be deleted\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithenv","title":"fn spec.managedResources.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithfieldpath","title":"fn spec.managedResources.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithkind","title":"fn spec.managedResources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithname","title":"fn spec.managedResources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithnamespace","title":"fn spec.managedResources.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithraw","title":"fn spec.managedResources.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithrawmixin","title":"fn spec.managedResources.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithresourceversion","title":"fn spec.managedResources.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithskipgc","title":"fn spec.managedResources.withSkipGC","text":"<pre><code>withSkipGC(skipGC)\n</code></pre> <p>\"SkipGC marks the resource to skip gc\"</p>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithtrait","title":"fn spec.managedResources.withTrait","text":"<pre><code>withTrait(trait)\n</code></pre>"},{"location":"1.6/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithuid","title":"fn spec.managedResources.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/","title":"core.v1beta1.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/","title":"core.v1beta1.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withStage(stage)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithcontrolplaneonly","title":"fn spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithmanageworkload","title":"fn spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithstage","title":"fn spec.withStage","text":"<pre><code>withStage(stage)\n</code></pre> <p>\"Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/","title":"core.v1beta1.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition is the Schema for the workflowstepdefinitions API\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkflowStepDefinition</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-spec","title":"obj spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/","title":"core.v1beta1.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.6/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.6/standard/","title":"standard","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.6/standard/v1alpha1/","title":"standard.v1alpha1","text":"<ul> <li>rollout</li> </ul>"},{"location":"1.6/standard/v1alpha1/rollout/","title":"standard.v1alpha1.rollout","text":"<p>\"Rollout is the Schema for the Rollout API\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentName(componentName)</code></li> <li><code>fn withSourceRevisionName(sourceRevisionName)</code></li> <li><code>fn withTargetRevisionName(targetRevisionName)</code></li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.6/standard/v1alpha1/rollout/#fields","title":"Fields","text":""},{"location":"1.6/standard/v1alpha1/rollout/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Rollout</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-spec","title":"obj spec","text":"<p>\"RolloutSpec defines how to describe an update between different compRevision\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specwithcomponentname","title":"fn spec.withComponentName","text":"<pre><code>withComponentName(componentName)\n</code></pre> <p>\"ComponentName specify the component name\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specwithsourcerevisionname","title":"fn spec.withSourceRevisionName","text":"<pre><code>withSourceRevisionName(sourceRevisionName)\n</code></pre> <p>\"SourceRevisionName contains the name of the componentRevisionName  that we need to upgrade from. it can be empty only when it's the first time to deploy the application\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specwithtargetrevisionname","title":"fn spec.withTargetRevisionName","text":"<pre><code>withTargetRevisionName(targetRevisionName)\n</code></pre> <p>\"TargetRevisionName contains the name of the componentRevisionName that we need to upgrade to.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.6/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/","title":"kubevela","text":"<pre><code>local kubevela = import \"github.com/jsonnet-libs/kubevela-libsonnet/1.7/main.libsonnet\"\n</code></pre> <ul> <li>core</li> <li>standard</li> </ul>"},{"location":"1.7/core/","title":"core","text":"<ul> <li>v1alpha1</li> <li>v1alpha2</li> <li>v1beta1</li> </ul>"},{"location":"1.7/core/v1alpha1/","title":"core.v1alpha1","text":"<ul> <li>envBinding</li> <li>policy</li> <li>workflow</li> </ul>"},{"location":"1.7/core/v1alpha1/envBinding/","title":"core.v1alpha1.envBinding","text":"<p>\"EnvBinding is the Schema for the EnvBinding API\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppTemplate(appTemplate)</code></li> <li><code>fn withAppTemplateMixin(appTemplate)</code></li> <li><code>fn withEngine(engine)</code></li> <li><code>fn withEnvs(envs)</code></li> <li><code>fn withEnvsMixin(envs)</code></li> <li><code>obj spec.envs</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.envs.patch</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.envs.patch.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.envs.patch.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.envs.patch.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.envs.placement</code><ul> <li><code>obj spec.envs.placement.clusterSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.envs.placement.namespaceSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.envs.selector</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.outputResourcesTo</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha1/envBinding/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha1/envBinding/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvBinding</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-spec","title":"obj spec","text":"<p>\"A EnvBindingSpec defines the desired state of a EnvBinding.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specwithapptemplate","title":"fn spec.withAppTemplate","text":"<pre><code>withAppTemplate(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specwithapptemplatemixin","title":"fn spec.withAppTemplateMixin","text":"<pre><code>withAppTemplateMixin(appTemplate)\n</code></pre> <p>\"AppTemplate indicates the application template.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specwithengine","title":"fn spec.withEngine","text":"<pre><code>withEngine(engine)\n</code></pre> <p>\"ClusterManagementEngine represents a multi-cluster management solution\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specwithenvs","title":"fn spec.withEnvs","text":"<pre><code>withEnvs(envs)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specwithenvsmixin","title":"fn spec.withEnvsMixin","text":"<pre><code>withEnvsMixin(envs)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvs","title":"obj spec.envs","text":""},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvswithname","title":"fn spec.envs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvspatch","title":"obj spec.envs.patch","text":"<p>\"EnvPatch specify the parameter configuration for different environments\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponents","title":"fn spec.envs.patch.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchwithcomponentsmixin","title":"fn spec.envs.patch.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvspatchcomponents","title":"obj spec.envs.patch.components","text":""},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependson","title":"fn spec.envs.patch.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithdependsonmixin","title":"fn spec.envs.patch.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithexternalrevision","title":"fn spec.envs.patch.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputs","title":"fn spec.envs.patch.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithinputsmixin","title":"fn spec.envs.patch.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithname","title":"fn spec.envs.patch.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputs","title":"fn spec.envs.patch.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithoutputsmixin","title":"fn spec.envs.patch.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithproperties","title":"fn spec.envs.patch.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithpropertiesmixin","title":"fn spec.envs.patch.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopes","title":"fn spec.envs.patch.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithscopesmixin","title":"fn spec.envs.patch.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraits","title":"fn spec.envs.patch.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtraitsmixin","title":"fn spec.envs.patch.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentswithtype","title":"fn spec.envs.patch.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsinputs","title":"obj spec.envs.patch.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithfrom","title":"fn spec.envs.patch.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsinputswithparameterkey","title":"fn spec.envs.patch.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvspatchcomponentsoutputs","title":"obj spec.envs.patch.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithname","title":"fn spec.envs.patch.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentsoutputswithvaluefrom","title":"fn spec.envs.patch.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvspatchcomponentstraits","title":"obj spec.envs.patch.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithproperties","title":"fn spec.envs.patch.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithpropertiesmixin","title":"fn spec.envs.patch.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvspatchcomponentstraitswithtype","title":"fn spec.envs.patch.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvsplacement","title":"obj spec.envs.placement","text":"<p>\"EnvPlacement defines the placement rules for an app.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvsplacementclusterselector","title":"obj spec.envs.placement.clusterSelector","text":"<p>\"ClusterSelector defines the rules to select a Cluster resource. Either name or labels is needed.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabels","title":"fn spec.envs.placement.clusterSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithlabelsmixin","title":"fn spec.envs.placement.clusterSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the cluster.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementclusterselectorwithname","title":"fn spec.envs.placement.clusterSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the cluster.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvsplacementnamespaceselector","title":"obj spec.envs.placement.namespaceSelector","text":"<p>\"NamespaceSelector defines the rules to select a Namespace resource. Either name or labels is needed.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabels","title":"fn spec.envs.placement.namespaceSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithlabelsmixin","title":"fn spec.envs.placement.namespaceSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Labels defines the label selector to select the namespace.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsplacementnamespaceselectorwithname","title":"fn spec.envs.placement.namespaceSelector.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the name of the namespace.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specenvsselector","title":"obj spec.envs.selector","text":"<p>\"EnvSelector defines which components should this env contains\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponents","title":"fn spec.envs.selector.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specenvsselectorwithcomponentsmixin","title":"fn spec.envs.selector.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/envBinding/#obj-specoutputresourcesto","title":"obj spec.outputResourcesTo","text":"<p>\"OutputResourcesTo specifies the namespace and name of a ConfigMap which store the resources rendered after differentiated configuration\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specoutputresourcestowithname","title":"fn spec.outputResourcesTo.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1alpha1/envBinding/#fn-specoutputresourcestowithnamespace","title":"fn spec.outputResourcesTo.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1alpha1/policy/","title":"core.v1alpha1.policy","text":"<p>\"Policy is the Schema for the policy API\"</p>"},{"location":"1.7/core/v1alpha1/policy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha1/policy/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha1/policy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Policy</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-withproperties","title":"fn withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1alpha1/policy/#fn-withpropertiesmixin","title":"fn withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-withtype","title":"fn withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1alpha1/policy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha1/policy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha1/workflow/","title":"core.v1alpha1.workflow","text":"<p>\"Workflow is the Schema for the workflow API\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha1/workflow/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha1/workflow/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Workflow</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-withsteps","title":"fn withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-withstepsmixin","title":"fn withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#obj-mode","title":"obj mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-modewithsteps","title":"fn mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-modewithsubsteps","title":"fn mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#obj-steps","title":"obj steps","text":""},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithdependson","title":"fn steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithdependsonmixin","title":"fn steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithif","title":"fn steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithinputs","title":"fn steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithinputsmixin","title":"fn steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithname","title":"fn steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithoutputs","title":"fn steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithoutputsmixin","title":"fn steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithproperties","title":"fn steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithpropertiesmixin","title":"fn steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithsubsteps","title":"fn steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithsubstepsmixin","title":"fn steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithtimeout","title":"fn steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepswithtype","title":"fn steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepsinputs","title":"obj steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepsinputswithfrom","title":"fn steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepsinputswithparameterkey","title":"fn steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepsmeta","title":"obj steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepsmetawithalias","title":"fn steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepsoutputs","title":"obj steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepsoutputswithname","title":"fn steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepsoutputswithvaluefrom","title":"fn steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepssubsteps","title":"obj steps.subSteps","text":""},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithdependson","title":"fn steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithdependsonmixin","title":"fn steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithif","title":"fn steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithinputs","title":"fn steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithinputsmixin","title":"fn steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithname","title":"fn steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithoutputs","title":"fn steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithoutputsmixin","title":"fn steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithproperties","title":"fn steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithpropertiesmixin","title":"fn steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithtimeout","title":"fn steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepswithtype","title":"fn steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepssubstepsinputs","title":"obj steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepsinputswithfrom","title":"fn steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepsinputswithparameterkey","title":"fn steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepssubstepsmeta","title":"obj steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepsmetawithalias","title":"fn steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#obj-stepssubstepsoutputs","title":"obj steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithname","title":"fn steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha1/workflow/#fn-stepssubstepsoutputswithvaluefrom","title":"fn steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1alpha2/","title":"core.v1alpha2","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>healthScope</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.7/core/v1alpha2/application/","title":"core.v1alpha2.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.7/core/v1alpha2/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/application/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.7/core/v1alpha2/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithsettings","title":"fn spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithsettingsmixin","title":"fn spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentstraitswithname","title":"fn spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1alpha2/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/application/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/application/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/","title":"core.v1alpha2.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationConfiguration(applicationConfiguration)</code></li> <li><code>fn withApplicationConfigurationMixin(applicationConfiguration)</code></li> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withSettings(settings)</code></li> <li><code>fn withSettingsMixin(settings)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.components</code><ul> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfiguration","title":"fn spec.withApplicationConfiguration","text":"<pre><code>withApplicationConfiguration(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithapplicationconfigurationmixin","title":"fn spec.withApplicationConfigurationMixin","text":"<pre><code>withApplicationConfigurationMixin(applicationConfiguration)\n</code></pre> <p>\"ApplicationConfiguration records the rendered applicationConfiguration from Application, it will contains the whole K8s CR of trait and the reference component in it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettings","title":"fn spec.application.spec.components.withSettings","text":"<pre><code>withSettings(settings)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithsettingsmixin","title":"fn spec.application.spec.components.withSettingsMixin","text":"<pre><code>withSettingsMixin(settings)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithname","title":"fn spec.application.spec.components.traits.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplan","title":"obj spec.application.spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithbatchpartition","title":"fn spec.application.spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetric","title":"fn spec.application.spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithnumbatches","title":"fn spec.application.spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithpaused","title":"fn spec.application.spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatches","title":"fn spec.application.spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutbatchesmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutstrategy","title":"fn spec.application.spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanwithtargetsize","title":"fn spec.application.spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetric","title":"obj spec.application.spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplancanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatches","title":"obj spec.application.spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlist","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatcheswithreplicas","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetric","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.application.spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-specapplicationspecrolloutplanrolloutwebhooks","title":"obj spec.application.spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadata","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithmethod","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithname","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithtype","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-specapplicationspecrolloutplanrolloutwebhookswithurl","title":"fn spec.application.spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/core/v1alpha2/applicationRevision/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-speccomponentswithraw","title":"fn spec.components.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.7/core/v1alpha2/applicationRevision/#fn-speccomponentswithrawmixin","title":"fn spec.components.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/","title":"core.v1alpha2.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.7/core/v1alpha2/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.7/core/v1alpha2/healthScope/","title":"core.v1alpha2.healthScope","text":"<p>\"A HealthScope determines an aggregate health status based of the health of components.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppReferences(appReferences)</code></li> <li><code>fn withAppReferencesMixin(appReferences)</code></li> <li><code>fn withProbe-Interval(probe_interval)</code></li> <li><code>fn withProbe-Timeout(probe_timeout)</code></li> <li><code>fn withWorkloadRefs(workloadRefs)</code></li> <li><code>fn withWorkloadRefsMixin(workloadRefs)</code></li> <li><code>obj spec.appReferences</code><ul> <li><code>fn withAppName(appName)</code></li> <li><code>fn withCompReferences(compReferences)</code></li> <li><code>fn withCompReferencesMixin(compReferences)</code></li> <li><code>obj spec.appReferences.compReferences</code><ul> <li><code>fn withCompName(compName)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>obj spec.appReferences.compReferences.traits</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec.appReferences.compReferences.workload</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workloadRefs</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/healthScope/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/healthScope/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HealthScope</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-spec","title":"obj spec","text":"<p>\"A HealthScopeSpec defines the desired state of a HealthScope.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithappreferences","title":"fn spec.withAppReferences","text":"<pre><code>withAppReferences(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithappreferencesmixin","title":"fn spec.withAppReferencesMixin","text":"<pre><code>withAppReferencesMixin(appReferences)\n</code></pre> <p>\"AppRefs records references of applications' components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithprobe-interval","title":"fn spec.withProbe-Interval","text":"<pre><code>withProbe-Interval(probe_interval)\n</code></pre> <p>\"ProbeInterval is the amount of time in seconds between probing tries.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithprobe-timeout","title":"fn spec.withProbe-Timeout","text":"<pre><code>withProbe-Timeout(probe_timeout)\n</code></pre> <p>\"ProbeTimeout is the amount of time in seconds to wait when receiving a response before marked failure.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithworkloadrefs","title":"fn spec.withWorkloadRefs","text":"<pre><code>withWorkloadRefs(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specwithworkloadrefsmixin","title":"fn spec.withWorkloadRefsMixin","text":"<pre><code>withWorkloadRefsMixin(workloadRefs)\n</code></pre> <p>\"WorkloadReferences to the workloads that are in this scope.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-specappreferences","title":"obj spec.appReferences","text":"<p>\"AppRefs records references of applications' components\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferenceswithappname","title":"fn spec.appReferences.withAppName","text":"<pre><code>withAppName(appName)\n</code></pre>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferences","title":"fn spec.appReferences.withCompReferences","text":"<pre><code>withCompReferences(compReferences)\n</code></pre>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferenceswithcompreferencesmixin","title":"fn spec.appReferences.withCompReferencesMixin","text":"<pre><code>withCompReferencesMixin(compReferences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-specappreferencescompreferences","title":"obj spec.appReferences.compReferences","text":""},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithcompname","title":"fn spec.appReferences.compReferences.withCompName","text":"<pre><code>withCompName(compName)\n</code></pre>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraits","title":"fn spec.appReferences.compReferences.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferenceswithtraitsmixin","title":"fn spec.appReferences.compReferences.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-specappreferencescompreferencestraits","title":"obj spec.appReferences.compReferences.traits","text":""},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithapiversion","title":"fn spec.appReferences.compReferences.traits.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithfieldpath","title":"fn spec.appReferences.compReferences.traits.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithkind","title":"fn spec.appReferences.compReferences.traits.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithname","title":"fn spec.appReferences.compReferences.traits.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithnamespace","title":"fn spec.appReferences.compReferences.traits.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithresourceversion","title":"fn spec.appReferences.compReferences.traits.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencestraitswithuid","title":"fn spec.appReferences.compReferences.traits.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-specappreferencescompreferencesworkload","title":"obj spec.appReferences.compReferences.workload","text":"<p>\"ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \\\"must refer only to types A and B\\\" or \\\"UID not honored\\\" or \\\"name must be restricted\\\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \\n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithapiversion","title":"fn spec.appReferences.compReferences.workload.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithfieldpath","title":"fn spec.appReferences.compReferences.workload.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithkind","title":"fn spec.appReferences.compReferences.workload.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithname","title":"fn spec.appReferences.compReferences.workload.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithnamespace","title":"fn spec.appReferences.compReferences.workload.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithresourceversion","title":"fn spec.appReferences.compReferences.workload.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specappreferencescompreferencesworkloadwithuid","title":"fn spec.appReferences.compReferences.workload.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#obj-specworkloadrefs","title":"obj spec.workloadRefs","text":"<p>\"WorkloadReferences to the workloads that are in this scope.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithapiversion","title":"fn spec.workloadRefs.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithfieldpath","title":"fn spec.workloadRefs.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithkind","title":"fn spec.workloadRefs.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithname","title":"fn spec.workloadRefs.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithnamespace","title":"fn spec.workloadRefs.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithresourceversion","title":"fn spec.workloadRefs.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/healthScope/#fn-specworkloadrefswithuid","title":"fn spec.workloadRefs.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/","title":"core.v1alpha2.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/","title":"core.v1alpha2.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in kind.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1alpha2/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/","title":"core.v1alpha2.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1alpha2/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/","title":"core.v1beta1","text":"<ul> <li>application</li> <li>applicationRevision</li> <li>componentDefinition</li> <li>definitionRevision</li> <li>policyDefinition</li> <li>resourceTracker</li> <li>scopeDefinition</li> <li>traitDefinition</li> <li>workflowStepDefinition</li> <li>workloadDefinition</li> </ul>"},{"location":"1.7/core/v1beta1/application/","title":"core.v1beta1.application","text":"<p>\"Application is the Schema for the applications API\"</p>"},{"location":"1.7/core/v1beta1/application/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/application/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/application/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Application</p>"},{"location":"1.7/core/v1beta1/application/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/application/#obj-spec","title":"obj spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specwithcomponents","title":"fn spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specwithcomponentsmixin","title":"fn spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#obj-speccomponents","title":"obj spec.components","text":""},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithdependson","title":"fn spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithdependsonmixin","title":"fn spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithexternalrevision","title":"fn spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithinputs","title":"fn spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithinputsmixin","title":"fn spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithname","title":"fn spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithoutputs","title":"fn spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithoutputsmixin","title":"fn spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithproperties","title":"fn spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithpropertiesmixin","title":"fn spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithscopes","title":"fn spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithscopesmixin","title":"fn spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithtraits","title":"fn spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithtraitsmixin","title":"fn spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentswithtype","title":"fn spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-speccomponentsinputs","title":"obj spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentsinputswithfrom","title":"fn spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentsinputswithparameterkey","title":"fn spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-speccomponentsoutputs","title":"obj spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentsoutputswithname","title":"fn spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentsoutputswithvaluefrom","title":"fn spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-speccomponentstraits","title":"obj spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentstraitswithproperties","title":"fn spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentstraitswithpropertiesmixin","title":"fn spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-speccomponentstraitswithtype","title":"fn spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specpolicies","title":"obj spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specpolicieswithname","title":"fn spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specpolicieswithproperties","title":"fn spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specpolicieswithpropertiesmixin","title":"fn spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specpolicieswithtype","title":"fn spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowwithref","title":"fn spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowmode","title":"obj spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowmodewithsteps","title":"fn spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowmodewithsubsteps","title":"fn spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/application/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/","title":"core.v1beta1.applicationRevision","text":"<p>\"ApplicationRevision is the Schema for the ApplicationRevision API\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentDefinitions(componentDefinitions)</code></li> <li><code>fn withComponentDefinitionsMixin(componentDefinitions)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>fn withPolicyDefinitions(policyDefinitions)</code></li> <li><code>fn withPolicyDefinitionsMixin(policyDefinitions)</code></li> <li><code>fn withReferredObjects(referredObjects)</code></li> <li><code>fn withReferredObjectsMixin(referredObjects)</code></li> <li><code>fn withScopeDefinitions(scopeDefinitions)</code></li> <li><code>fn withScopeDefinitionsMixin(scopeDefinitions)</code></li> <li><code>fn withScopeGVK(scopeGVK)</code></li> <li><code>fn withScopeGVKMixin(scopeGVK)</code></li> <li><code>fn withTraitDefinitions(traitDefinitions)</code></li> <li><code>fn withTraitDefinitionsMixin(traitDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitions(workflowStepDefinitions)</code></li> <li><code>fn withWorkflowStepDefinitionsMixin(workflowStepDefinitions)</code></li> <li><code>fn withWorkloadDefinitions(workloadDefinitions)</code></li> <li><code>fn withWorkloadDefinitionsMixin(workloadDefinitions)</code></li> <li><code>obj spec.application</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.application.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.application.spec</code><ul> <li><code>fn withComponents(components)</code></li> <li><code>fn withComponentsMixin(components)</code></li> <li><code>fn withPolicies(policies)</code></li> <li><code>fn withPoliciesMixin(policies)</code></li> <li><code>obj spec.application.spec.components</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withExternalRevision(externalRevision)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withScopes(scopes)</code></li> <li><code>fn withScopesMixin(scopes)</code></li> <li><code>fn withTraits(traits)</code></li> <li><code>fn withTraitsMixin(traits)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.components.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.components.traits</code><ul> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.application.spec.policies</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow</code><ul> <li><code>fn withRef(ref)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.application.spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.application.spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.application.spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.compression</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.workflow</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSteps(steps)</code></li> <li><code>fn withStepsMixin(steps)</code></li> <li><code>obj spec.workflow.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflow.mode</code><ul> <li><code>fn withSteps(steps)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> </ul> </li> <li><code>obj spec.workflow.steps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withSubSteps(subSteps)</code></li> <li><code>fn withSubStepsMixin(subSteps)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps</code><ul> <li><code>fn withDependsOn(dependsOn)</code></li> <li><code>fn withDependsOnMixin(dependsOn)</code></li> <li><code>fn withIf(If)</code></li> <li><code>fn withInputs(inputs)</code></li> <li><code>fn withInputsMixin(inputs)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOutputs(outputs)</code></li> <li><code>fn withOutputsMixin(outputs)</code></li> <li><code>fn withProperties(properties)</code></li> <li><code>fn withPropertiesMixin(properties)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflow.steps.subSteps.inputs</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withParameterKey(parameterKey)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.meta</code><ul> <li><code>fn withAlias(alias)</code></li> </ul> </li> <li><code>obj spec.workflow.steps.subSteps.outputs</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/applicationRevision/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ApplicationRevision</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-spec","title":"obj spec","text":"<p>\"ApplicationRevisionSpec is the spec of ApplicationRevision\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitions","title":"fn spec.withComponentDefinitions","text":"<pre><code>withComponentDefinitions(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithcomponentdefinitionsmixin","title":"fn spec.withComponentDefinitionsMixin","text":"<pre><code>withComponentDefinitionsMixin(componentDefinitions)\n</code></pre> <p>\"ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithpolicies","title":"fn spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies records the external policies\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithpoliciesmixin","title":"fn spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies records the external policies\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitions","title":"fn spec.withPolicyDefinitions","text":"<pre><code>withPolicyDefinitions(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithpolicydefinitionsmixin","title":"fn spec.withPolicyDefinitionsMixin","text":"<pre><code>withPolicyDefinitionsMixin(policyDefinitions)\n</code></pre> <p>\"PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithreferredobjects","title":"fn spec.withReferredObjects","text":"<pre><code>withReferredObjects(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithreferredobjectsmixin","title":"fn spec.withReferredObjectsMixin","text":"<pre><code>withReferredObjectsMixin(referredObjects)\n</code></pre> <p>\"ReferredObjects records the referred objects used in the ref-object typed components\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithscopedefinitions","title":"fn spec.withScopeDefinitions","text":"<pre><code>withScopeDefinitions(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithscopedefinitionsmixin","title":"fn spec.withScopeDefinitionsMixin","text":"<pre><code>withScopeDefinitionsMixin(scopeDefinitions)\n</code></pre> <p>\"ScopeDefinitions records the snapshot of the scopeDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithscopegvk","title":"fn spec.withScopeGVK","text":"<pre><code>withScopeGVK(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithscopegvkmixin","title":"fn spec.withScopeGVKMixin","text":"<pre><code>withScopeGVKMixin(scopeGVK)\n</code></pre> <p>\"ScopeGVK records the apiVersion to GVK mapping\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitions","title":"fn spec.withTraitDefinitions","text":"<pre><code>withTraitDefinitions(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithtraitdefinitionsmixin","title":"fn spec.withTraitDefinitionsMixin","text":"<pre><code>withTraitDefinitionsMixin(traitDefinitions)\n</code></pre> <p>\"TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitions","title":"fn spec.withWorkflowStepDefinitions","text":"<pre><code>withWorkflowStepDefinitions(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithworkflowstepdefinitionsmixin","title":"fn spec.withWorkflowStepDefinitionsMixin","text":"<pre><code>withWorkflowStepDefinitionsMixin(workflowStepDefinitions)\n</code></pre> <p>\"WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitions","title":"fn spec.withWorkloadDefinitions","text":"<pre><code>withWorkloadDefinitions(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specwithworkloaddefinitionsmixin","title":"fn spec.withWorkloadDefinitionsMixin","text":"<pre><code>withWorkloadDefinitionsMixin(workloadDefinitions)\n</code></pre> <p>\"WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplication","title":"obj spec.application","text":"<p>\"Application records the snapshot of the created/modified Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationwithapiversion","title":"fn spec.application.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationwithkind","title":"fn spec.application.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationmetadata","title":"obj spec.application.metadata","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotations","title":"fn spec.application.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithannotationsmixin","title":"fn spec.application.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizers","title":"fn spec.application.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithfinalizersmixin","title":"fn spec.application.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabels","title":"fn spec.application.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithlabelsmixin","title":"fn spec.application.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithname","title":"fn spec.application.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationmetadatawithnamespace","title":"fn spec.application.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspec","title":"obj spec.application.spec","text":"<p>\"ApplicationSpec is the spec of Application\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponents","title":"fn spec.application.spec.withComponents","text":"<pre><code>withComponents(components)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecwithcomponentsmixin","title":"fn spec.application.spec.withComponentsMixin","text":"<pre><code>withComponentsMixin(components)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpolicies","title":"fn spec.application.spec.withPolicies","text":"<pre><code>withPolicies(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecwithpoliciesmixin","title":"fn spec.application.spec.withPoliciesMixin","text":"<pre><code>withPoliciesMixin(policies)\n</code></pre> <p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponents","title":"obj spec.application.spec.components","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependson","title":"fn spec.application.spec.components.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithdependsonmixin","title":"fn spec.application.spec.components.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithexternalrevision","title":"fn spec.application.spec.components.withExternalRevision","text":"<pre><code>withExternalRevision(externalRevision)\n</code></pre> <p>\"ExternalRevision specified the component revisionName\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputs","title":"fn spec.application.spec.components.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithinputsmixin","title":"fn spec.application.spec.components.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"StepInputs defines variable input of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithname","title":"fn spec.application.spec.components.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputs","title":"fn spec.application.spec.components.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithoutputsmixin","title":"fn spec.application.spec.components.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"StepOutputs defines output variable of WorkflowStep\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithproperties","title":"fn spec.application.spec.components.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithpropertiesmixin","title":"fn spec.application.spec.components.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopes","title":"fn spec.application.spec.components.withScopes","text":"<pre><code>withScopes(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithscopesmixin","title":"fn spec.application.spec.components.withScopesMixin","text":"<pre><code>withScopesMixin(scopes)\n</code></pre> <p>\"scopes in ApplicationComponent defines the component-level scopes the format is  pairs, the key represents type of <code>ScopeDefinition</code> while the value represent the name of scope instance.\" <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraits","title":"fn spec.application.spec.components.withTraits","text":"<pre><code>withTraits(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtraitsmixin","title":"fn spec.application.spec.components.withTraitsMixin","text":"<pre><code>withTraitsMixin(traits)\n</code></pre> <p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentswithtype","title":"fn spec.application.spec.components.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsinputs","title":"obj spec.application.spec.components.inputs","text":"<p>\"StepInputs defines variable input of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithfrom","title":"fn spec.application.spec.components.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsinputswithparameterkey","title":"fn spec.application.spec.components.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentsoutputs","title":"obj spec.application.spec.components.outputs","text":"<p>\"StepOutputs defines output variable of WorkflowStep\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithname","title":"fn spec.application.spec.components.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentsoutputswithvaluefrom","title":"fn spec.application.spec.components.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspeccomponentstraits","title":"obj spec.application.spec.components.traits","text":"<p>\"Traits define the trait of one component, the type must be array to keep the order.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithproperties","title":"fn spec.application.spec.components.traits.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithpropertiesmixin","title":"fn spec.application.spec.components.traits.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspeccomponentstraitswithtype","title":"fn spec.application.spec.components.traits.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecpolicies","title":"obj spec.application.spec.policies","text":"<p>\"Policies defines the global policies for all components in the app, e.g. security, metrics, gitops, multi-cluster placement rules, etc. Policies are applied after components are rendered and before workflow steps are executed.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithname","title":"fn spec.application.spec.policies.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the policy.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithproperties","title":"fn spec.application.spec.policies.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithpropertiesmixin","title":"fn spec.application.spec.policies.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecpolicieswithtype","title":"fn spec.application.spec.policies.withType","text":"<pre><code>withType(type)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflow","title":"obj spec.application.spec.workflow","text":"<p>\"Workflow defines how to customize the control logic. If workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision. Workflow steps are executed in array order, and each step: - will have a context in annotation. - should mark \\\"finish\\\" phase in status.conditions.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithref","title":"fn spec.application.spec.workflow.withRef","text":"<pre><code>withRef(ref)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithsteps","title":"fn spec.application.spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowwithstepsmixin","title":"fn spec.application.spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowmode","title":"obj spec.application.spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsteps","title":"fn spec.application.spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowmodewithsubsteps","title":"fn spec.application.spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowsteps","title":"obj spec.application.spec.workflow.steps","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependson","title":"fn spec.application.spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithif","title":"fn spec.application.spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputs","title":"fn spec.application.spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithname","title":"fn spec.application.spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputs","title":"fn spec.application.spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithproperties","title":"fn spec.application.spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubsteps","title":"fn spec.application.spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithsubstepsmixin","title":"fn spec.application.spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtimeout","title":"fn spec.application.spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepswithtype","title":"fn spec.application.spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsinputs","title":"obj spec.application.spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsmeta","title":"obj spec.application.spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepsoutputs","title":"obj spec.application.spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubsteps","title":"obj spec.application.spec.workflow.steps.subSteps","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependson","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithdependsonmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithif","title":"fn spec.application.spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputs","title":"fn spec.application.spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithinputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithname","title":"fn spec.application.spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputs","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithoutputsmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithproperties","title":"fn spec.application.spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithpropertiesmixin","title":"fn spec.application.spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtimeout","title":"fn spec.application.spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepswithtype","title":"fn spec.application.spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsinputs","title":"obj spec.application.spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithfrom","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsinputswithparameterkey","title":"fn spec.application.spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsmeta","title":"obj spec.application.spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsmetawithalias","title":"fn spec.application.spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specapplicationspecworkflowstepssubstepsoutputs","title":"obj spec.application.spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithname","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specapplicationspecworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.application.spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-speccompression","title":"obj spec.compression","text":"<p>\"Compression represents the compressed components in apprev in base64 (if compression is enabled).\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-speccompressionwithdata","title":"fn spec.compression.withData","text":"<pre><code>withData(data)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-speccompressionwithtype","title":"fn spec.compression.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type the compression type\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflow","title":"obj spec.workflow","text":"<p>\"Workflow records the external workflow\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowwithapiversion","title":"fn spec.workflow.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowwithkind","title":"fn spec.workflow.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowwithsteps","title":"fn spec.workflow.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowwithstepsmixin","title":"fn spec.workflow.withStepsMixin","text":"<pre><code>withStepsMixin(steps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowmetadata","title":"obj spec.workflow.metadata","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotations","title":"fn spec.workflow.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithannotationsmixin","title":"fn spec.workflow.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizers","title":"fn spec.workflow.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithfinalizersmixin","title":"fn spec.workflow.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabels","title":"fn spec.workflow.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithlabelsmixin","title":"fn spec.workflow.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithname","title":"fn spec.workflow.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmetadatawithnamespace","title":"fn spec.workflow.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowmode","title":"obj spec.workflow.mode","text":"<p>\"WorkflowExecuteMode defines the mode of workflow execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmodewithsteps","title":"fn spec.workflow.mode.withSteps","text":"<pre><code>withSteps(steps)\n</code></pre> <p>\"Steps is the mode of workflow steps execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowmodewithsubsteps","title":"fn spec.workflow.mode.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre> <p>\"SubSteps is the mode of workflow sub steps execution\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowsteps","title":"obj spec.workflow.steps","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependson","title":"fn spec.workflow.steps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithdependsonmixin","title":"fn spec.workflow.steps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithif","title":"fn spec.workflow.steps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputs","title":"fn spec.workflow.steps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithinputsmixin","title":"fn spec.workflow.steps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithname","title":"fn spec.workflow.steps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputs","title":"fn spec.workflow.steps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithoutputsmixin","title":"fn spec.workflow.steps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithproperties","title":"fn spec.workflow.steps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithpropertiesmixin","title":"fn spec.workflow.steps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubsteps","title":"fn spec.workflow.steps.withSubSteps","text":"<pre><code>withSubSteps(subSteps)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithsubstepsmixin","title":"fn spec.workflow.steps.withSubStepsMixin","text":"<pre><code>withSubStepsMixin(subSteps)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtimeout","title":"fn spec.workflow.steps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepswithtype","title":"fn spec.workflow.steps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepsinputs","title":"obj spec.workflow.steps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithfrom","title":"fn spec.workflow.steps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepsinputswithparameterkey","title":"fn spec.workflow.steps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepsmeta","title":"obj spec.workflow.steps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepsmetawithalias","title":"fn spec.workflow.steps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepsoutputs","title":"obj spec.workflow.steps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithname","title":"fn spec.workflow.steps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepssubsteps","title":"obj spec.workflow.steps.subSteps","text":""},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependson","title":"fn spec.workflow.steps.subSteps.withDependsOn","text":"<pre><code>withDependsOn(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithdependsonmixin","title":"fn spec.workflow.steps.subSteps.withDependsOnMixin","text":"<pre><code>withDependsOnMixin(dependsOn)\n</code></pre> <p>\"DependsOn is the dependency of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithif","title":"fn spec.workflow.steps.subSteps.withIf","text":"<pre><code>withIf(If)\n</code></pre> <p>\"If is the if condition of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputs","title":"fn spec.workflow.steps.subSteps.withInputs","text":"<pre><code>withInputs(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithinputsmixin","title":"fn spec.workflow.steps.subSteps.withInputsMixin","text":"<pre><code>withInputsMixin(inputs)\n</code></pre> <p>\"Inputs is the inputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithname","title":"fn spec.workflow.steps.subSteps.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name is the unique name of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputs","title":"fn spec.workflow.steps.subSteps.withOutputs","text":"<pre><code>withOutputs(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithoutputsmixin","title":"fn spec.workflow.steps.subSteps.withOutputsMixin","text":"<pre><code>withOutputsMixin(outputs)\n</code></pre> <p>\"Outputs is the outputs of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithproperties","title":"fn spec.workflow.steps.subSteps.withProperties","text":"<pre><code>withProperties(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithpropertiesmixin","title":"fn spec.workflow.steps.subSteps.withPropertiesMixin","text":"<pre><code>withPropertiesMixin(properties)\n</code></pre> <p>\"Properties is the properties of the step\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtimeout","title":"fn spec.workflow.steps.subSteps.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout is the timeout of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepswithtype","title":"fn spec.workflow.steps.subSteps.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type is the type of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsinputs","title":"obj spec.workflow.steps.subSteps.inputs","text":"<p>\"Inputs is the inputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithfrom","title":"fn spec.workflow.steps.subSteps.inputs.withFrom","text":"<pre><code>withFrom(from)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsinputswithparameterkey","title":"fn spec.workflow.steps.subSteps.inputs.withParameterKey","text":"<pre><code>withParameterKey(parameterKey)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsmeta","title":"obj spec.workflow.steps.subSteps.meta","text":"<p>\"Meta is the meta data of the workflow step.\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsmetawithalias","title":"fn spec.workflow.steps.subSteps.meta.withAlias","text":"<pre><code>withAlias(alias)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#obj-specworkflowstepssubstepsoutputs","title":"obj spec.workflow.steps.subSteps.outputs","text":"<p>\"Outputs is the outputs of the step\"</p>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithname","title":"fn spec.workflow.steps.subSteps.outputs.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/applicationRevision/#fn-specworkflowstepssubstepsoutputswithvaluefrom","title":"fn spec.workflow.steps.subSteps.outputs.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.7/core/v1beta1/componentDefinition/","title":"core.v1beta1.componentDefinition","text":"<p>\"ComponentDefinition is the Schema for the componentdefinitions API\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/componentDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/componentDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ComponentDefinition</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-spec","title":"obj spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specworkload","title":"obj spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specworkloadwithtype","title":"fn spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#obj-specworkloaddefinition","title":"obj spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithapiversion","title":"fn spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.7/core/v1beta1/componentDefinition/#fn-specworkloaddefinitionwithkind","title":"fn spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/","title":"core.v1beta1.definitionRevision","text":"<p>\"DefinitionRevision is the Schema for the DefinitionRevision API\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDefinitionType(definitionType)</code></li> <li><code>fn withRevision(revision)</code></li> <li><code>fn withRevisionHash(revisionHash)</code></li> <li><code>obj spec.componentDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.componentDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.componentDefinition.spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic</code><ul> <li><code>obj spec.componentDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.componentDefinition.spec.workload</code><ul> <li><code>fn withType(type)</code></li> <li><code>obj spec.componentDefinition.spec.workload.definition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.policyDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.policyDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic</code><ul> <li><code>obj spec.policyDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.traitDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withStage(stage)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.traitDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic</code><ul> <li><code>obj spec.traitDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>obj spec.workflowStepDefinition.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec</code><ul> <li><code>obj spec.workflowStepDefinition.spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic</code><ul> <li><code>obj spec.workflowStepDefinition.spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/definitionRevision/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/definitionRevision/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DefinitionRevision</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spec","title":"obj spec","text":"<p>\"DefinitionRevisionSpec is the spec of DefinitionRevision\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specwithdefinitiontype","title":"fn spec.withDefinitionType","text":"<pre><code>withDefinitionType(definitionType)\n</code></pre> <p>\"DefinitionType\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specwithrevision","title":"fn spec.withRevision","text":"<pre><code>withRevision(revision)\n</code></pre> <p>\"Revision record revision number of DefinitionRevision\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specwithrevisionhash","title":"fn spec.withRevisionHash","text":"<pre><code>withRevisionHash(revisionHash)\n</code></pre> <p>\"RevisionHash record the hash value of the spec of DefinitionRevision object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinition","title":"obj spec.componentDefinition","text":"<p>\"ComponentDefinition records the snapshot of the created/modified ComponentDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithapiversion","title":"fn spec.componentDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionwithkind","title":"fn spec.componentDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionmetadata","title":"obj spec.componentDefinition.metadata","text":""},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotations","title":"fn spec.componentDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithannotationsmixin","title":"fn spec.componentDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizers","title":"fn spec.componentDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithfinalizersmixin","title":"fn spec.componentDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabels","title":"fn spec.componentDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithlabelsmixin","title":"fn spec.componentDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithname","title":"fn spec.componentDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionmetadatawithnamespace","title":"fn spec.componentDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspec","title":"obj spec.componentDefinition.spec","text":"<p>\"ComponentDefinitionSpec defines the desired state of ComponentDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekinds","title":"fn spec.componentDefinition.spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithchildresourcekindsmixin","title":"fn spec.componentDefinition.spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextension","title":"fn spec.componentDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithextensionmixin","title":"fn spec.componentDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithpodspecpath","title":"fn spec.componentDefinition.spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecwithrevisionlabel","title":"fn spec.componentDefinition.spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecchildresourcekinds","title":"obj spec.componentDefinition.spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithapiversion","title":"fn spec.componentDefinition.spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithkind","title":"fn spec.componentDefinition.spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselector","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecchildresourcekindswithselectormixin","title":"fn spec.componentDefinition.spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematic","title":"obj spec.componentDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematiccue","title":"obj spec.componentDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematiccuewithtemplate","title":"fn spec.componentDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematichelm","title":"obj spec.componentDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrelease","title":"fn spec.componentDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithreleasemixin","title":"fn spec.componentDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepository","title":"fn spec.componentDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.componentDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickube","title":"obj spec.componentDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparameters","title":"fn spec.componentDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithparametersmixin","title":"fn spec.componentDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplate","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubewithtemplatemixin","title":"fn spec.componentDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematickubeparameters","title":"obj spec.componentDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithdescription","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithname","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithrequired","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematickubeparameterswithtype","title":"fn spec.componentDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraform","title":"obj spec.componentDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithconfiguration","title":"fn spec.componentDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithcustomregion","title":"fn spec.componentDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.componentDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithpath","title":"fn spec.componentDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwithtype","title":"fn spec.componentDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformgitcredentialssecretreference","title":"obj spec.componentDefinition.spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.componentDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformproviderref","title":"obj spec.componentDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.componentDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkload","title":"obj spec.componentDefinition.spec.workload","text":"<p>\"Workload is a workload type descriptor\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloadwithtype","title":"fn spec.componentDefinition.spec.workload.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type ref to a WorkloadDefinition via name\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-speccomponentdefinitionspecworkloaddefinition","title":"obj spec.componentDefinition.spec.workload.definition","text":"<p>\"Definition mutually exclusive to workload.type, a embedded WorkloadDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithapiversion","title":"fn spec.componentDefinition.spec.workload.definition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-speccomponentdefinitionspecworkloaddefinitionwithkind","title":"fn spec.componentDefinition.spec.workload.definition.withKind","text":"<pre><code>withKind(kind)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinition","title":"obj spec.policyDefinition","text":"<p>\"PolicyDefinition records the snapshot of the created/modified PolicyDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithapiversion","title":"fn spec.policyDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionwithkind","title":"fn spec.policyDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionmetadata","title":"obj spec.policyDefinition.metadata","text":""},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotations","title":"fn spec.policyDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithannotationsmixin","title":"fn spec.policyDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizers","title":"fn spec.policyDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithfinalizersmixin","title":"fn spec.policyDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabels","title":"fn spec.policyDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithlabelsmixin","title":"fn spec.policyDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithname","title":"fn spec.policyDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionmetadatawithnamespace","title":"fn spec.policyDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspec","title":"obj spec.policyDefinition.spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecwithmanagehealthcheck","title":"fn spec.policyDefinition.spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecdefinitionref","title":"obj spec.policyDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithname","title":"fn spec.policyDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecdefinitionrefwithversion","title":"fn spec.policyDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematic","title":"obj spec.policyDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematiccue","title":"obj spec.policyDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematiccuewithtemplate","title":"fn spec.policyDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematichelm","title":"obj spec.policyDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrelease","title":"fn spec.policyDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithreleasemixin","title":"fn spec.policyDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepository","title":"fn spec.policyDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematichelmwithrepositorymixin","title":"fn spec.policyDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickube","title":"obj spec.policyDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparameters","title":"fn spec.policyDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithparametersmixin","title":"fn spec.policyDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplate","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubewithtemplatemixin","title":"fn spec.policyDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematickubeparameters","title":"obj spec.policyDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithdescription","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithname","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithrequired","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematickubeparameterswithtype","title":"fn spec.policyDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraform","title":"obj spec.policyDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithconfiguration","title":"fn spec.policyDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithcustomregion","title":"fn spec.policyDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithdeleteresource","title":"fn spec.policyDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithpath","title":"fn spec.policyDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwithtype","title":"fn spec.policyDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformgitcredentialssecretreference","title":"obj spec.policyDefinition.spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.policyDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformproviderref","title":"obj spec.policyDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specpolicydefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specpolicydefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.policyDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinition","title":"obj spec.traitDefinition","text":"<p>\"TraitDefinition records the snapshot of the created/modified TraitDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithapiversion","title":"fn spec.traitDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionwithkind","title":"fn spec.traitDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionmetadata","title":"obj spec.traitDefinition.metadata","text":""},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotations","title":"fn spec.traitDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithannotationsmixin","title":"fn spec.traitDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizers","title":"fn spec.traitDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithfinalizersmixin","title":"fn spec.traitDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabels","title":"fn spec.traitDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithlabelsmixin","title":"fn spec.traitDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithname","title":"fn spec.traitDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionmetadatawithnamespace","title":"fn spec.traitDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspec","title":"obj spec.traitDefinition.spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloads","title":"fn spec.traitDefinition.spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithappliestoworkloadsmixin","title":"fn spec.traitDefinition.spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswith","title":"fn spec.traitDefinition.spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithconflictswithmixin","title":"fn spec.traitDefinition.spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithcontrolplaneonly","title":"fn spec.traitDefinition.spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextension","title":"fn spec.traitDefinition.spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithextensionmixin","title":"fn spec.traitDefinition.spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithmanageworkload","title":"fn spec.traitDefinition.spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithpoddisruptive","title":"fn spec.traitDefinition.spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithrevisionenabled","title":"fn spec.traitDefinition.spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithstage","title":"fn spec.traitDefinition.spec.withStage","text":"<pre><code>withStage(stage)\n</code></pre> <p>\"Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecwithworkloadrefpath","title":"fn spec.traitDefinition.spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecdefinitionref","title":"obj spec.traitDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithname","title":"fn spec.traitDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecdefinitionrefwithversion","title":"fn spec.traitDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematic","title":"obj spec.traitDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematiccue","title":"obj spec.traitDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematiccuewithtemplate","title":"fn spec.traitDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematichelm","title":"obj spec.traitDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrelease","title":"fn spec.traitDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithreleasemixin","title":"fn spec.traitDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepository","title":"fn spec.traitDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.traitDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickube","title":"obj spec.traitDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparameters","title":"fn spec.traitDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithparametersmixin","title":"fn spec.traitDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplate","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubewithtemplatemixin","title":"fn spec.traitDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematickubeparameters","title":"obj spec.traitDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithdescription","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithname","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithrequired","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematickubeparameterswithtype","title":"fn spec.traitDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraform","title":"obj spec.traitDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithconfiguration","title":"fn spec.traitDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithcustomregion","title":"fn spec.traitDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.traitDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithpath","title":"fn spec.traitDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwithtype","title":"fn spec.traitDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformgitcredentialssecretreference","title":"obj spec.traitDefinition.spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.traitDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformproviderref","title":"obj spec.traitDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-spectraitdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-spectraitdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.traitDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinition","title":"obj spec.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition records the snapshot of the created/modified WorkflowStepDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithapiversion","title":"fn spec.workflowStepDefinition.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionwithkind","title":"fn spec.workflowStepDefinition.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionmetadata","title":"obj spec.workflowStepDefinition.metadata","text":""},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotations","title":"fn spec.workflowStepDefinition.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithannotationsmixin","title":"fn spec.workflowStepDefinition.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizers","title":"fn spec.workflowStepDefinition.metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithfinalizersmixin","title":"fn spec.workflowStepDefinition.metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabels","title":"fn spec.workflowStepDefinition.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithlabelsmixin","title":"fn spec.workflowStepDefinition.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithname","title":"fn spec.workflowStepDefinition.metadata.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionmetadatawithnamespace","title":"fn spec.workflowStepDefinition.metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspec","title":"obj spec.workflowStepDefinition.spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecdefinitionref","title":"obj spec.workflowStepDefinition.spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithname","title":"fn spec.workflowStepDefinition.spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecdefinitionrefwithversion","title":"fn spec.workflowStepDefinition.spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematic","title":"obj spec.workflowStepDefinition.spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematiccue","title":"obj spec.workflowStepDefinition.spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematiccuewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematichelm","title":"obj spec.workflowStepDefinition.spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrelease","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithreleasemixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepository","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematichelmwithrepositorymixin","title":"fn spec.workflowStepDefinition.spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickube","title":"obj spec.workflowStepDefinition.spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparameters","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithparametersmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplate","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubewithtemplatemixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematickubeparameters","title":"obj spec.workflowStepDefinition.spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithdescription","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpaths","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithfieldpathsmixin","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithname","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithrequired","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematickubeparameterswithtype","title":"fn spec.workflowStepDefinition.spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraform","title":"obj spec.workflowStepDefinition.spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithconfiguration","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithcustomregion","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithdeleteresource","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithpath","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwithtype","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformgitcredentialssecretreference","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformproviderref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformproviderrefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#obj-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettoref","title":"obj spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/definitionRevision/#fn-specworkflowstepdefinitionspecschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.workflowStepDefinition.spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/","title":"core.v1beta1.policyDefinition","text":"<p>\"PolicyDefinition is the Schema for the policydefinitions API\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withManageHealthCheck(manageHealthCheck)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/policyDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/policyDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PolicyDefinition</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-spec","title":"obj spec","text":"<p>\"PolicyDefinitionSpec defines the desired state of PolicyDefinition\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specwithmanagehealthcheck","title":"fn spec.withManageHealthCheck","text":"<pre><code>withManageHealthCheck(manageHealthCheck)\n</code></pre> <p>\"ManageHealthCheck means the policy will handle health checking and skip application controller built-in health checking.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the policy definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/policyDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/","title":"core.v1beta1.resourceTracker","text":"<p>\"An ResourceTracker represents a tracker for track cross namespace resources\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplicationGeneration(applicationGeneration)</code></li> <li><code>fn withManagedResources(managedResources)</code></li> <li><code>fn withManagedResourcesMixin(managedResources)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.compression</code><ul> <li><code>fn withData(data)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.managedResources</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withCluster(cluster)</code></li> <li><code>fn withComponent(component)</code></li> <li><code>fn withCreator(creator)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withEnv(env)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withRaw(raw)</code></li> <li><code>fn withRawMixin(raw)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSkipGC(skipGC)</code></li> <li><code>fn withTrait(trait)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/resourceTracker/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/resourceTracker/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ResourceTracker</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#obj-spec","title":"obj spec","text":"<p>\"ResourceTrackerSpec define the spec of resourceTracker\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specwithapplicationgeneration","title":"fn spec.withApplicationGeneration","text":"<pre><code>withApplicationGeneration(applicationGeneration)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specwithmanagedresources","title":"fn spec.withManagedResources","text":"<pre><code>withManagedResources(managedResources)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specwithmanagedresourcesmixin","title":"fn spec.withManagedResourcesMixin","text":"<pre><code>withManagedResourcesMixin(managedResources)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specwithtype","title":"fn spec.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ResourceTrackerType defines the type of resourceTracker\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#obj-speccompression","title":"obj spec.compression","text":"<p>\"ResourceTrackerCompression represents the compressed components in ResourceTracker.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-speccompressionwithdata","title":"fn spec.compression.withData","text":"<pre><code>withData(data)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-speccompressionwithtype","title":"fn spec.compression.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type the compression type\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#obj-specmanagedresources","title":"obj spec.managedResources","text":""},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithapiversion","title":"fn spec.managedResources.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcluster","title":"fn spec.managedResources.withCluster","text":"<pre><code>withCluster(cluster)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcomponent","title":"fn spec.managedResources.withComponent","text":"<pre><code>withComponent(component)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithcreator","title":"fn spec.managedResources.withCreator","text":"<pre><code>withCreator(creator)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithdeleted","title":"fn spec.managedResources.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted marks the resource to be deleted\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithenv","title":"fn spec.managedResources.withEnv","text":"<pre><code>withEnv(env)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithfieldpath","title":"fn spec.managedResources.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithkind","title":"fn spec.managedResources.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithname","title":"fn spec.managedResources.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithnamespace","title":"fn spec.managedResources.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithraw","title":"fn spec.managedResources.withRaw","text":"<pre><code>withRaw(raw)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithrawmixin","title":"fn spec.managedResources.withRawMixin","text":"<pre><code>withRawMixin(raw)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithresourceversion","title":"fn spec.managedResources.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithskipgc","title":"fn spec.managedResources.withSkipGC","text":"<pre><code>withSkipGC(skipGC)\n</code></pre> <p>\"SkipGC marks the resource to skip gc\"</p>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithtrait","title":"fn spec.managedResources.withTrait","text":"<pre><code>withTrait(trait)\n</code></pre>"},{"location":"1.7/core/v1beta1/resourceTracker/#fn-specmanagedresourceswithuid","title":"fn spec.managedResources.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/","title":"core.v1beta1.scopeDefinition","text":"<p>\"A ScopeDefinition registers a kind of Kubernetes custom resource as a valid OAM scope kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the scope when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowComponentOverlap(allowComponentOverlap)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withWorkloadRefsPath(workloadRefsPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ScopeDefinition</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#obj-spec","title":"obj spec","text":"<p>\"A ScopeDefinitionSpec defines the desired state of a ScopeDefinition.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specwithallowcomponentoverlap","title":"fn spec.withAllowComponentOverlap","text":"<pre><code>withAllowComponentOverlap(allowComponentOverlap)\n</code></pre> <p>\"AllowComponentOverlap specifies whether an OAM component may exist in multiple instances of this kind of scope.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specwithworkloadrefspath","title":"fn spec.withWorkloadRefsPath","text":"<pre><code>withWorkloadRefsPath(workloadRefsPath)\n</code></pre> <p>\"WorkloadRefsPath indicates if/where a scope accepts workloadRef objects\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this scope kind.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/scopeDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/","title":"core.v1beta1.traitDefinition","text":"<p>\"A TraitDefinition registers a kind of Kubernetes custom resource as a valid OAM trait kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the trait when it is embedded in an OAM ApplicationConfiguration.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAppliesToWorkloads(appliesToWorkloads)</code></li> <li><code>fn withAppliesToWorkloadsMixin(appliesToWorkloads)</code></li> <li><code>fn withConflictsWith(conflictsWith)</code></li> <li><code>fn withConflictsWithMixin(conflictsWith)</code></li> <li><code>fn withControlPlaneOnly(controlPlaneOnly)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withManageWorkload(manageWorkload)</code></li> <li><code>fn withPodDisruptive(podDisruptive)</code></li> <li><code>fn withRevisionEnabled(revisionEnabled)</code></li> <li><code>fn withStage(stage)</code></li> <li><code>fn withWorkloadRefPath(workloadRefPath)</code></li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/traitDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/traitDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of TraitDefinition</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-spec","title":"obj spec","text":"<p>\"A TraitDefinitionSpec defines the desired state of a TraitDefinition.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloads","title":"fn spec.withAppliesToWorkloads","text":"<pre><code>withAppliesToWorkloads(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithappliestoworkloadsmixin","title":"fn spec.withAppliesToWorkloadsMixin","text":"<pre><code>withAppliesToWorkloadsMixin(appliesToWorkloads)\n</code></pre> <p>\"AppliesToWorkloads specifies the list of workload kinds this trait applies to. Workload kinds are specified in resource.group/version format, e.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to all workload kinds.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithconflictswith","title":"fn spec.withConflictsWith","text":"<pre><code>withConflictsWith(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithconflictswithmixin","title":"fn spec.withConflictsWithMixin","text":"<pre><code>withConflictsWithMixin(conflictsWith)\n</code></pre> <p>\"ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group) which could not apply to the same workloads with this trait. Traits that omit this field can work with any other traits. Example rules: \\\"service\\\" # Trait definition name \\\"services.k8s.io\\\" # API resource/crd name \\\"*.networking.k8s.io\\\" # API group \\\"labelSelector:foo=bar\\\" # label selector labelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithcontrolplaneonly","title":"fn spec.withControlPlaneOnly","text":"<pre><code>withControlPlaneOnly(controlPlaneOnly)\n</code></pre> <p>\"ControlPlaneOnly defines which cluster is dispatched to\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithmanageworkload","title":"fn spec.withManageWorkload","text":"<pre><code>withManageWorkload(manageWorkload)\n</code></pre> <p>\"ManageWorkload defines the trait would be responsible for creating the workload\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithpoddisruptive","title":"fn spec.withPodDisruptive","text":"<pre><code>withPodDisruptive(podDisruptive)\n</code></pre> <p>\"PodDisruptive specifies whether using the trait will cause the pod to restart or not.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithrevisionenabled","title":"fn spec.withRevisionEnabled","text":"<pre><code>withRevisionEnabled(revisionEnabled)\n</code></pre> <p>\"Revision indicates whether a trait is aware of component revision\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithstage","title":"fn spec.withStage","text":"<pre><code>withStage(stage)\n</code></pre> <p>\"Stage defines the stage information to which this trait resource processing belongs. Currently, PreDispatch and PostDispatch are provided, which are used to control resource pre-process and post-process respectively.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specwithworkloadrefpath","title":"fn spec.withWorkloadRefPath","text":"<pre><code>withWorkloadRefPath(workloadRefPath)\n</code></pre> <p>\"WorkloadRefPath indicates where/if a trait accepts a workloadRef object\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the trait. Only CUE and Kube schematic are supported for now.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/traitDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/","title":"core.v1beta1.workflowStepDefinition","text":"<p>\"WorkflowStepDefinition is the Schema for the workflowstepdefinitions API\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkflowStepDefinition</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-spec","title":"obj spec","text":"<p>\"WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this trait kind.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workflow step definition. Only CUE schematic is supported for now.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/workflowStepDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/","title":"core.v1beta1.workloadDefinition","text":"<p>\"A WorkloadDefinition registers a kind of Kubernetes custom resource as a valid OAM workload kind by referencing its CustomResourceDefinition. The CRD is used to validate the schema of the workload when it is embedded in an OAM Component.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withChildResourceKinds(childResourceKinds)</code></li> <li><code>fn withChildResourceKindsMixin(childResourceKinds)</code></li> <li><code>fn withExtension(extension)</code></li> <li><code>fn withExtensionMixin(extension)</code></li> <li><code>fn withPodSpecPath(podSpecPath)</code></li> <li><code>fn withRevisionLabel(revisionLabel)</code></li> <li><code>obj spec.childResourceKinds</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> </ul> </li> <li><code>obj spec.definitionRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withVersion(version)</code></li> </ul> </li> <li><code>obj spec.schematic</code><ul> <li><code>obj spec.schematic.cue</code><ul> <li><code>fn withTemplate(template)</code></li> </ul> </li> <li><code>obj spec.schematic.helm</code><ul> <li><code>fn withRelease(release)</code></li> <li><code>fn withReleaseMixin(release)</code></li> <li><code>fn withRepository(repository)</code></li> <li><code>fn withRepositoryMixin(repository)</code></li> </ul> </li> <li><code>obj spec.schematic.kube</code><ul> <li><code>fn withParameters(parameters)</code></li> <li><code>fn withParametersMixin(parameters)</code></li> <li><code>fn withTemplate(template)</code></li> <li><code>fn withTemplateMixin(template)</code></li> <li><code>obj spec.schematic.kube.parameters</code><ul> <li><code>fn withDescription(description)</code></li> <li><code>fn withFieldPaths(fieldPaths)</code></li> <li><code>fn withFieldPathsMixin(fieldPaths)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRequired(required)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.schematic.terraform</code><ul> <li><code>fn withConfiguration(configuration)</code></li> <li><code>fn withCustomRegion(customRegion)</code></li> <li><code>fn withDeleteResource(deleteResource)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withType(type)</code></li> <li><code>obj spec.schematic.terraform.gitCredentialsSecretReference</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.providerRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> <li><code>obj spec.schematic.terraform.writeConnectionSecretToRef</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fields","title":"Fields","text":""},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadDefinition</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-spec","title":"obj spec","text":"<p>\"A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekinds","title":"fn spec.withChildResourceKinds","text":"<pre><code>withChildResourceKinds(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithchildresourcekindsmixin","title":"fn spec.withChildResourceKindsMixin","text":"<pre><code>withChildResourceKindsMixin(childResourceKinds)\n</code></pre> <p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithextension","title":"fn spec.withExtension","text":"<pre><code>withExtension(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithextensionmixin","title":"fn spec.withExtensionMixin","text":"<pre><code>withExtensionMixin(extension)\n</code></pre> <p>\"Extension is used for extension needs by OAM platform builders\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithpodspecpath","title":"fn spec.withPodSpecPath","text":"<pre><code>withPodSpecPath(podSpecPath)\n</code></pre> <p>\"PodSpecPath indicates where/if this workload has K8s podSpec field if one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specwithrevisionlabel","title":"fn spec.withRevisionLabel","text":"<pre><code>withRevisionLabel(revisionLabel)\n</code></pre> <p>\"RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload can be used by trait to create resource selectors(e.g. label selector for pods).\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specchildresourcekinds","title":"obj spec.childResourceKinds","text":"<p>\"ChildResourceKinds are the list of GVK of the child resources this workload generates\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithapiversion","title":"fn spec.childResourceKinds.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"APIVersion of the child resource\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithkind","title":"fn spec.childResourceKinds.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the child resource\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselector","title":"fn spec.childResourceKinds.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specchildresourcekindswithselectormixin","title":"fn spec.childResourceKinds.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>\"Selector to select the child resources that the workload wants to expose to traits\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specdefinitionref","title":"obj spec.definitionRef","text":"<p>\"Reference to the CustomResourceDefinition that defines this workload kind.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithname","title":"fn spec.definitionRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced CustomResourceDefinition.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specdefinitionrefwithversion","title":"fn spec.definitionRef.withVersion","text":"<pre><code>withVersion(version)\n</code></pre> <p>\"Version indicate which version should be used if CRD has multiple versions by default it will use the first one if not specified\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematic","title":"obj spec.schematic","text":"<p>\"Schematic defines the data format and template of the encapsulation of the workload\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematiccue","title":"obj spec.schematic.cue","text":"<p>\"CUE defines the encapsulation in CUE format\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematiccuewithtemplate","title":"fn spec.schematic.cue.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field. Template is a required field if CUE is defined in Capability Definition.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematichelm","title":"obj spec.schematic.helm","text":"<p>\"A Helm represents resources used by a Helm module\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrelease","title":"fn spec.schematic.helm.withRelease","text":"<pre><code>withRelease(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematichelmwithreleasemixin","title":"fn spec.schematic.helm.withReleaseMixin","text":"<pre><code>withReleaseMixin(release)\n</code></pre> <p>\"Release records a Helm release used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepository","title":"fn spec.schematic.helm.withRepository","text":"<pre><code>withRepository(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematichelmwithrepositorymixin","title":"fn spec.schematic.helm.withRepositoryMixin","text":"<pre><code>withRepositoryMixin(repository)\n</code></pre> <p>\"HelmRelease records a Helm repository used by a Helm module workload.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematickube","title":"obj spec.schematic.kube","text":"<p>\"Kube defines the encapsulation in raw Kubernetes resource format\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubewithparameters","title":"fn spec.schematic.kube.withParameters","text":"<pre><code>withParameters(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubewithparametersmixin","title":"fn spec.schematic.kube.withParametersMixin","text":"<pre><code>withParametersMixin(parameters)\n</code></pre> <p>\"Parameters defines configurable parameters\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplate","title":"fn spec.schematic.kube.withTemplate","text":"<pre><code>withTemplate(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubewithtemplatemixin","title":"fn spec.schematic.kube.withTemplateMixin","text":"<pre><code>withTemplateMixin(template)\n</code></pre> <p>\"Template defines the raw Kubernetes resource\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematickubeparameters","title":"obj spec.schematic.kube.parameters","text":"<p>\"Parameters defines configurable parameters\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithdescription","title":"fn spec.schematic.kube.parameters.withDescription","text":"<pre><code>withDescription(description)\n</code></pre> <p>\"Description of this parameter.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpaths","title":"fn spec.schematic.kube.parameters.withFieldPaths","text":"<pre><code>withFieldPaths(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithfieldpathsmixin","title":"fn spec.schematic.kube.parameters.withFieldPathsMixin","text":"<pre><code>withFieldPathsMixin(fieldPaths)\n</code></pre> <p>\"FieldPaths specifies an array of fields within this workload that will be overwritten by the value of this parameter. \\tAll fields must be of the same type. Fields are specified as JSON field paths without a leading dot, for example 'spec.replicas'.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithname","title":"fn spec.schematic.kube.parameters.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this parameter\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithrequired","title":"fn spec.schematic.kube.parameters.withRequired","text":"<pre><code>withRequired(required)\n</code></pre> <p>\"Required specifies whether or not a value for this parameter must be supplied when authoring an Application.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematickubeparameterswithtype","title":"fn spec.schematic.kube.parameters.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"ValueType indicates the type of the parameter value, and only supports basic data types: string, number, boolean.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematicterraform","title":"obj spec.schematic.terraform","text":"<p>\"Terraform is the struct to describe cloud resources managed by Hashicorp Terraform\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithconfiguration","title":"fn spec.schematic.terraform.withConfiguration","text":"<pre><code>withConfiguration(configuration)\n</code></pre> <p>\"Configuration is Terraform Configuration\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithcustomregion","title":"fn spec.schematic.terraform.withCustomRegion","text":"<pre><code>withCustomRegion(customRegion)\n</code></pre> <p>\"Region is cloud provider's region. It will override the region in the region field of ProviderReference\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithdeleteresource","title":"fn spec.schematic.terraform.withDeleteResource","text":"<pre><code>withDeleteResource(deleteResource)\n</code></pre> <p>\"DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithpath","title":"fn spec.schematic.terraform.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path is the sub-directory of remote git repository. It's valid when remote is set\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwithtype","title":"fn spec.schematic.terraform.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type specifies which Terraform configuration it is, HCL or JSON syntax\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematicterraformgitcredentialssecretreference","title":"obj spec.schematic.terraform.gitCredentialsSecretReference","text":"<p>\"GitCredentialsSecretReference specifies the reference to the secret containing the git credentials\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithname","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"name is unique within a namespace to reference a secret resource.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformgitcredentialssecretreferencewithnamespace","title":"fn spec.schematic.terraform.gitCredentialsSecretReference.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"namespace defines the space within which the secret name must be unique.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematicterraformproviderref","title":"obj spec.schematic.terraform.providerRef","text":"<p>\"ProviderReference specifies the reference to Provider\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithname","title":"fn spec.schematic.terraform.providerRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformproviderrefwithnamespace","title":"fn spec.schematic.terraform.providerRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referenced object.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#obj-specschematicterraformwriteconnectionsecrettoref","title":"obj spec.schematic.terraform.writeConnectionSecretToRef","text":"<p>\"WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithname","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the secret.\"</p>"},{"location":"1.7/core/v1beta1/workloadDefinition/#fn-specschematicterraformwriteconnectionsecrettorefwithnamespace","title":"fn spec.schematic.terraform.writeConnectionSecretToRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the secret.\"</p>"},{"location":"1.7/standard/","title":"standard","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.7/standard/v1alpha1/","title":"standard.v1alpha1","text":"<ul> <li>rollout</li> </ul>"},{"location":"1.7/standard/v1alpha1/rollout/","title":"standard.v1alpha1.rollout","text":"<p>\"Rollout is the Schema for the Rollout API\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withComponentName(componentName)</code></li> <li><code>fn withSourceRevisionName(sourceRevisionName)</code></li> <li><code>fn withTargetRevisionName(targetRevisionName)</code></li> <li><code>obj spec.rolloutPlan</code><ul> <li><code>fn withBatchPartition(batchPartition)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withNumBatches(numBatches)</code></li> <li><code>fn withPaused(paused)</code></li> <li><code>fn withRolloutBatches(rolloutBatches)</code></li> <li><code>fn withRolloutBatchesMixin(rolloutBatches)</code></li> <li><code>fn withRolloutStrategy(rolloutStrategy)</code></li> <li><code>fn withRolloutWebhooks(rolloutWebhooks)</code></li> <li><code>fn withRolloutWebhooksMixin(rolloutWebhooks)</code></li> <li><code>fn withTargetSize(targetSize)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches</code><ul> <li><code>fn withBatchRolloutWebhooks(batchRolloutWebhooks)</code></li> <li><code>fn withBatchRolloutWebhooksMixin(batchRolloutWebhooks)</code></li> <li><code>fn withCanaryMetric(canaryMetric)</code></li> <li><code>fn withCanaryMetricMixin(canaryMetric)</code></li> <li><code>fn withInstanceInterval(instanceInterval)</code></li> <li><code>fn withMaxUnavailable(maxUnavailable)</code></li> <li><code>fn withPodList(podList)</code></li> <li><code>fn withPodListMixin(podList)</code></li> <li><code>fn withReplicas(replicas)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef</code><ul> <li><code>fn withApiVersion(apiVersion)</code></li> <li><code>fn withFieldPath(fieldPath)</code></li> <li><code>fn withKind(kind)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.rolloutPlan.rolloutWebhooks</code><ul> <li><code>fn withExpectedStatus(expectedStatus)</code></li> <li><code>fn withExpectedStatusMixin(expectedStatus)</code></li> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withMethod(method)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withType(type)</code></li> <li><code>fn withUrl(url)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.7/standard/v1alpha1/rollout/#fields","title":"Fields","text":""},{"location":"1.7/standard/v1alpha1/rollout/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Rollout</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-spec","title":"obj spec","text":"<p>\"RolloutSpec defines how to describe an update between different compRevision\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specwithcomponentname","title":"fn spec.withComponentName","text":"<pre><code>withComponentName(componentName)\n</code></pre> <p>\"ComponentName specify the component name\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specwithsourcerevisionname","title":"fn spec.withSourceRevisionName","text":"<pre><code>withSourceRevisionName(sourceRevisionName)\n</code></pre> <p>\"SourceRevisionName contains the name of the componentRevisionName  that we need to upgrade from. it can be empty only when it's the first time to deploy the application\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specwithtargetrevisionname","title":"fn spec.withTargetRevisionName","text":"<pre><code>withTargetRevisionName(targetRevisionName)\n</code></pre> <p>\"TargetRevisionName contains the name of the componentRevisionName that we need to upgrade to.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplan","title":"obj spec.rolloutPlan","text":"<p>\"RolloutPlan is the details on how to rollout the resources\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithbatchpartition","title":"fn spec.rolloutPlan.withBatchPartition","text":"<pre><code>withBatchPartition(batchPartition)\n</code></pre> <p>\"All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetric","title":"fn spec.rolloutPlan.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithcanarymetricmixin","title":"fn spec.rolloutPlan.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithnumbatches","title":"fn spec.rolloutPlan.withNumBatches","text":"<pre><code>withNumBatches(numBatches)\n</code></pre> <p>\"The number of batches, default = 1\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithpaused","title":"fn spec.rolloutPlan.withPaused","text":"<pre><code>withPaused(paused)\n</code></pre> <p>\"Paused the rollout, default is false\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatches","title":"fn spec.rolloutPlan.withRolloutBatches","text":"<pre><code>withRolloutBatches(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutbatchesmixin","title":"fn spec.rolloutPlan.withRolloutBatchesMixin","text":"<pre><code>withRolloutBatchesMixin(rolloutBatches)\n</code></pre> <p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutstrategy","title":"fn spec.rolloutPlan.withRolloutStrategy","text":"<pre><code>withRolloutStrategy(rolloutStrategy)\n</code></pre> <p>\"RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooks","title":"fn spec.rolloutPlan.withRolloutWebhooks","text":"<pre><code>withRolloutWebhooks(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithrolloutwebhooksmixin","title":"fn spec.rolloutPlan.withRolloutWebhooksMixin","text":"<pre><code>withRolloutWebhooksMixin(rolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanwithtargetsize","title":"fn spec.rolloutPlan.withTargetSize","text":"<pre><code>withTargetSize(targetSize)\n</code></pre> <p>\"The size of the target resource. The default is the same as the size of the source resource.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetric","title":"obj spec.rolloutPlan.canaryMetric","text":"<p>\"CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithinterval","title":"fn spec.rolloutPlan.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricwithname","title":"fn spec.rolloutPlan.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetricmetricsrange","title":"obj spec.rolloutPlan.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplancanarymetrictemplateref","title":"obj spec.rolloutPlan.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplancanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatches","title":"obj spec.rolloutPlan.rolloutBatches","text":"<p>\"The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooks","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooks","text":"<pre><code>withBatchRolloutWebhooks(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithbatchrolloutwebhooksmixin","title":"fn spec.rolloutPlan.rolloutBatches.withBatchRolloutWebhooksMixin","text":"<pre><code>withBatchRolloutWebhooksMixin(batchRolloutWebhooks)\n</code></pre> <p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetric","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetric","text":"<pre><code>withCanaryMetric(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithcanarymetricmixin","title":"fn spec.rolloutPlan.rolloutBatches.withCanaryMetricMixin","text":"<pre><code>withCanaryMetricMixin(canaryMetric)\n</code></pre> <p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithinstanceinterval","title":"fn spec.rolloutPlan.rolloutBatches.withInstanceInterval","text":"<pre><code>withInstanceInterval(instanceInterval)\n</code></pre> <p>\"The wait time, in seconds, between instances upgrades, default = 0\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithmaxunavailable","title":"fn spec.rolloutPlan.rolloutBatches.withMaxUnavailable","text":"<pre><code>withMaxUnavailable(maxUnavailable)\n</code></pre> <p>\"MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlist","title":"fn spec.rolloutPlan.rolloutBatches.withPodList","text":"<pre><code>withPodList(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithpodlistmixin","title":"fn spec.rolloutPlan.rolloutBatches.withPodListMixin","text":"<pre><code>withPodListMixin(podList)\n</code></pre> <p>\"The list of Pods to get upgraded it is mutually exclusive with the Replicas field\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatcheswithreplicas","title":"fn spec.rolloutPlan.rolloutBatches.withReplicas","text":"<pre><code>withReplicas(replicas)\n</code></pre> <p>\"Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchesbatchrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks","text":"<p>\"RolloutWebhooks provides a way for the batch rollout to interact with an external process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchesbatchrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutBatches.batchRolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetric","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric","text":"<p>\"CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithinterval","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Interval represents the windows size\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the metric\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetricmetricsrange","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange","text":"<p>\"Range value accepted for this metric\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmax","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMax","text":"<pre><code>withMax(max)\n</code></pre> <p>\"Maximum value\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetricmetricsrangewithmin","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.metricsRange.withMin","text":"<pre><code>withMin(min)\n</code></pre> <p>\"Minimum value\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutbatchescanarymetrictemplateref","title":"obj spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef","text":"<p>\"TemplateRef references a metric template object\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithapiversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withApiVersion","text":"<pre><code>withApiVersion(apiVersion)\n</code></pre> <p>\"API version of the referent.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithfieldpath","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withFieldPath","text":"<pre><code>withFieldPath(fieldPath)\n</code></pre> <p>\"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \\\"spec.containers{name}\\\" (where \\\"name\\\" refers to the name of the container that triggered the event) or if no container name is specified \\\"spec.containers[2]\\\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithkind","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withKind","text":"<pre><code>withKind(kind)\n</code></pre> <p>\"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithname","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithnamespace","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithresourceversion","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutbatchescanarymetrictemplaterefwithuid","title":"fn spec.rolloutPlan.rolloutBatches.canaryMetric.templateRef.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#obj-specrolloutplanrolloutwebhooks","title":"obj spec.rolloutPlan.rolloutWebhooks","text":"<p>\"RolloutWebhooks provide a way for the rollout to interact with an external process\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatus","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatus","text":"<pre><code>withExpectedStatus(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithexpectedstatusmixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withExpectedStatusMixin","text":"<pre><code>withExpectedStatusMixin(expectedStatus)\n</code></pre> <p>\"ExpectedStatus contains all the expected http status code that we will accept as success\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadata","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmetadatamixin","title":"fn spec.rolloutPlan.rolloutWebhooks.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>\"Metadata (key-value pairs) for this webhook\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithmethod","title":"fn spec.rolloutPlan.rolloutWebhooks.withMethod","text":"<pre><code>withMethod(method)\n</code></pre> <p>\"Method the HTTP call method, default is POST\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithname","title":"fn spec.rolloutPlan.rolloutWebhooks.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithtype","title":"fn spec.rolloutPlan.rolloutWebhooks.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Type of this webhook\"</p>"},{"location":"1.7/standard/v1alpha1/rollout/#fn-specrolloutplanrolloutwebhookswithurl","title":"fn spec.rolloutPlan.rolloutWebhooks.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL address of this webhook\"</p>"}]}